#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('util'),
                        'excludes': [u'Superflip',
                                     u'BrukerSaint',
                                     u'pyUtil/PyToolLib/ImateTools.py',
                                     u'pyUtil/PyToolLib/Copy (3) of PilTools.py',
                                     u'pyUtil/PyToolLib/Copy of PilTools.py',
                                     u'pyUtil/CctbxLib/cctbx/cctbx_sources',
                                     u'cfc',
                                     u'AsLib',
                                     u'pyUtil/PyToolLib/Copy of GuiTools.py',
                                     u'pyUtil/CctbxLib/cctbx/bundling',
                                     u'SHELX',
                                     u'STOE',
                                     u'SG',
                                     u'LCELLS',
                                     u'pyUtil/CctbxLib/cctbx/cctbx_build'],
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('util/AsLib'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('etc'),
                        'excludes': [u'gui/least-squares-constraints.htm'],
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1}]
proj.file-list = [loc('macro.xld'),
                  loc('plugins.xld'),
                  loc('settings.xld')]
proj.file-type = 'normal'
proj.main-file = loc('util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py')
[user attributes]
cache.last-mime-type = {loc('unknown:<untitled> #1'): 'text/plain'}
debug.breakpoints = {loc('util/pyUtil/CctbxLib/cctbx_controller.py'): {342: (0,
        None,
        1,
        0)},
                     loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'): {235: (0,
        None,
        1,
        0)},
                     loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'): {509: (0,
        None,
        1,
        0)},
                     loc('util/pyUtil/PyToolLib/ImageTools.py'): {178: (0,
        None,
        1,
        0)}}
debug.debug-probe-history = {None: ['colorstring\n',
                                    'args[0]\n',
                                    'nc\n',
                                    'filefull\n',
                                    'olx.FileFull()\n',
                                    'filedata\n',
                                    'file_data\n',
                                    'twin_laws\n',
                                    'law_double\n',
                                    "olx.GetData('cctbxmap')\n",
                                    "olx.GetVar('cctbxmap')\n",
                                    "olx.GetVar('cctbxmap')=='1'\n",
                                    'self.refinement.r1()\n',
                                    "olex.f('GetVar(cctbx_R1)')\n",
                                    'look\n',
                                    "olex.f('IsVar(cctbx_R1)'\n",
                                    "olex.f('IsVar(cctbx_R1)')\n",
                                    "olex.f('lsm')\n",
                                    "olex.f('lsm()')\n",
                                    'image\n',
                                    'self.gui_skin_name\n',
                                    'omit\n',
                                    'width\n',
                                    'right\n',
                                    'e = olx.xf.GetFormula()\n',
                                    'e = olx.xf_GetFormula()\n',
                                    'e\n',
                                    'ele\n',
                                    'bit\n',
                                    'elements\n',
                                    'u_average\n',
                                    'u[0]\n',
                                    'olx.xf_au_GetAtomType\n',
                                    'olx.xf_au_GetAtomType()\n',
                                    'id\n',
                                    'xyz\n',
                                    'u\n',
                                    'olx.xf\n',
                                    'a = olx.xf_au_GetAtomType(i)\n',
                                    'a\n',
                                    'pt\n',
                                    'self.pt\n',
                                    "self.pt.get('H')\n",
                                    "pt['H'].get('mass')\n",
                                    "self.pt['H'].get('mass')\n",
                                    'self.max_width\n',
                                    "olex.m('HtmlPanelWidth')\n",
                                    "olex.f('HtmlPanelWidth')\n",
                                    "olex.f('HtmlPanelWidth()')\n",
                                    '\tg\n',
                                    'g\n',
                                    'args\n',
                                    'self.param\n',
                                    'self.par\n',
                                    'his_file\n',
                                    's\n',
                                    'd\n',
                                    'type\n',
                                    'self.SD[ID]\n',
                                    "olx.GetVar('snum_ignore_refinement_sett"\
                                    "ings')\n",
                                    'nest\n',
                                    "olx.Cell('a')\n",
                                    'olx.Cell()\n',
                                    'Z\n',
                                    'volume\n',
                                    'max_atoms\n',
                                    "self.vvd['snum_max_peaks']\n",
                                    'ftype\n',
                                    'value\n',
                                    'self.termination_R_tolerance *R1\n',
                                    'self.termination_R_tolerance\n',
                                    'tol\n',
                                    'base\n',
                                    'olx.BaseDir()\n',
                                    'param\n',
                                    'fun\n',
                                    'self.method\n',
                                    'help(self.reflections)\n',
                                    'flipping.delta\n',
                                    'flipping.c_tot_over_c_flip()\n',
                                    'self.space_group_info().show_summary()\n',
                                    'help(polishing.f_calc.fft_map)\n',
                                    'R1\n',
                                    "olx.GetValue('snum_cctbxmap_resolution'"\
                                    ")\n",
                                    'self.R1\n',
                                    'cctbxmap_type\n',
                                    'returnvalue\n',
                                    'tool\n',
                                    'extension\n',
                                    '">> %s: %s(%s)" %(returnvalue, tool, na'\
                                    'me+extension)\n',
                                    'Str\n',
                                    'name\n',
                                    'textItems\n',
                                    'tabItems\n',
                                    'item\n',
                                    'font_colour=adjust_colour(base, luminos'\
                                    'ity_font)\n',
                                    'font_colour\n',
                                    'luminosity_font\n',
                                    'luminosity\n',
                                    'colour\n'],
                             loc('util/DIMAS/OlexGui/rs_ext.py'): ['regex.gr'\
        'oups()\n',
        'if m\n',
        'display\n',
        'm.groups(2)\n',
        'm.groups(1)\n',
        'regex.\n',
        'for entry in regex.finditer()\n',
        'for entry in regex.finditer\n',
        'print entry\n',
        'm.expand\n',
        'm.expand()\n',
        'regex.f\n',
        'm\n',
        'm.groups()\n',
        'm.groups\n',
        'm[1]\n',
        'item\n'],
                             loc('util/pyUtil/PyToolLib/PeriodicTable.py'): [""\
        "pt['H'].get('mass')\n"],
                             loc('util/pyUtil/PyToolLib/UpdateDimasDB.py'): [''\
        'self.rs\n',
        'self.ds\n',
        'a\n',
        'subject\n',
        'res\n',
        'sl\n',
        'line\n',
        'string\n',
        'bir\n',
        'bit\n',
        'bit[:-1]\n',
        'bit[:-2]\n',
        'self.CifItems\n',
        'self.cifItems\n',
        'm\n',
        'float(bit)\n',
        'str\n',
        'fileData\n',
        'item\n',
        'item.split()[1]\n',
        'sql\n',
        'ID\n',
        'value\n'],
                             loc('util/pyUtil/src/FileImporter.py'): ['SQLFa'\
        'ctories.up\n',
        'basedir\n'],
                             loc('util/pyUtil/src/pyTools.py'): ['self.fl\n',
        'i\n',
        'li[i+8]\n',
        'li\n',
        'fl[i]\n',
        'fl[i+7]\n',
        'self.currX\n',
        'self.currY\n',
        'dy\n',
        'l\n',
        'n\n',
        'sort\n',
        'sort[1]\n',
        'sort[-1]\n',
        'sort[:]\n',
        'sort[-1:]\n',
        'sort[-1:][0]\n',
        'sort_l\n',
        'fl\n',
        'AnalysisInfo\n',
        'image_location\n',
        'barX\n',
        'len(data)\n',
        'len(yAxis)\n',
        'dx\n',
        'barScale\n',
        'x\n',
        'self.graph_top + (self.graphY - barHeight)\n',
        'self.graph_top\n',
        'y\n',
        'self.graphY\n',
        'box\n',
        'r[3]\n',
        'r[4]\n',
        'fl[j]\n',
        'fl[j] != r"\\n"\n',
        'fl[j] == r"\\n"\n',
        'fl[j] == "\\n"\n',
        'fobs\n',
        'fcalc\n',
        'txt\n',
        'yAxix\n',
        'yAxis\n',
        'barcol\n',
        'items\n',
        'fl[i+4]\n',
        'fl[i+6]\n',
        'fl[i+9]\n',
        'fl[i+8]\n',
        'fl[i+10]\n',
        'wY\n',
        'barHeight\n',
        'r_row\n',
        'k_row\n',
        'item\n',
        'float(item)\n',
        'data\n',
        'f\n']}
debug.err-values = {None: {},
                    loc('file:C:/DS/durham_autosolve/horst/Olex_pyTools/pyTools.py'): {},
                    loc('../ChemDB/import_from_banner.py'): {},
                    loc('util/DIMAS/OlexGui/rs_ext.py'): {},
                    loc('util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py'): {''\
        'stack[1].locals.data_d': (-4,
                                   1,
                                   None,
                                   '0xd0e1e0',
                                   '__builtin__',
                                   8,
                                   'dict',
                                   1,
                                   None,
                                   None,
                                   (),
                                   0),
        'stack[1].locals.res': (-4,
                                1,
                                None,
                                '0xd57de8',
                                '__builtin__',
                                8,
                                'tuple',
                                1,
                                None,
                                None,
                                (),
                                0),
        'stack[1].locals.self.sourceData': (-4,
        2,
        None,
        '0xcc6c90',
        '__builtin__',
        8,
        'dict',
        1,
        None,
        None,
        (),
        0),
        'stack[2].locals.self.sourceData': (-4,
        2,
        None,
        '0xc5b9c0',
        '__builtin__',
        8,
        'dict',
        1,
        None,
        None,
        (),
        0),
        'watch.data_d': (-4,
                         None,
                         None,
                         '0xd0e1e0',
                         None,
                         4,
                         'dict',
                         1,
                         None,
                         None,
                         0,
                         0)},
                    loc('util/pyUtil/PyToolLib/PeriodicTable.py'): {},
                    loc('util/pyUtil/PyToolLib/RoundedCorners.py'): {},
                    loc('util/pyUtil/PyToolLib/UpdateDimasDB.py'): {'stack[0'\
        '].locals.self.SD': (-4,
                             2,
                             None,
                             '0xb7e3390',
                             '__builtin__',
                             8,
                             'dict',
                             1,
                             None,
                             None,
                             (),
                             0),
        'stack[1].locals.self.SD': (-4,
                                    2,
                                    None,
                                    '0xb7e3390',
                                    '__builtin__',
                                    8,
                                    'dict',
                                    1,
                                    None,
                                    None,
                                    (),
                                    0)},
                    loc('util/pyUtil/cctbx/cctbx_refine.py'): {},
                    loc('util/pyUtil/src/FileImporter.py'): {},
                    loc('util/pyUtil/src/pyTools.py'): {'watch.r': (-4,
        None,
        None,
        '0x489c9f0',
        None,
        4,
        'double',
        1,
        None,
        None,
        0,
        0)}}
debug.exceptions-ignored = {loc('file:c:/Python25/Lib/UserList.py'): {28: 1},
                            loc('../cctbx/cctbx_build/<string>'): {1: 1},
                            loc('dimas/01srv110/<string>'): {1: 1},
                            loc('util/pyUtil/PythonLib/UserList.py'): {28: 0},
                            loc('util/pyUtil/lib/PngImagePlugin.py'): {34: 1}}
debug.shell-history = {None: ['label\n',
                              'import socket\n',
                              "socket.gethostbyaddr('localhost')\n",
                              'self.tidy\n',
                              'self.cycle\n',
                              'item\n',
                              'parameters\n',
                              'tool\n',
                              'param\n',
                              'self.steps\n',
                              'function\n']}
debug.show-args-dialog = {loc('file:C:/Program Files/Olex2/util/pyUtil/initpy.py'): 0,
                          loc('util/DIMAS/DIMAS DATA MAINTANANCE/UpdateDimasDB.py'): 0,
                          loc('util/DIMAS/OlexGui/dl_box.py'): 0,
                          loc('util/DIMAS/OlexGui/rs_ext.py'): 0,
                          loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/command_line/configure.py'): 0,
                          loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/config.py'): 0,
                          loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'): 0,
                          loc('util/pyUtil/CctbxLib/map_flipping.py'): 0,
                          loc('util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py'): 0,
                          loc('util/pyUtil/PyToolLib/OlexHelpToMySQL.py'): 0,
                          loc('util/pyUtil/PyToolLib/PeriodicTable.py'): 0,
                          loc('util/pyUtil/PyToolLib/PilTools.py'): 0,
                          loc('util/pyUtil/PyToolLib/RoundedCorners.py'): 0,
                          loc('util/pyUtil/PyToolLib/UpdateDimasDB.py'): 0,
                          loc('util/pyUtil/cctbx/cctbx_refine.py'): 0,
                          loc('util/pyUtil/initpy.py'): 0,
                          loc('util/pyUtil/src/SQLFactories.py'): 0,
                          loc('util/pyUtil/src/pyTools.py'): 0}
debug.var-col-widths = [0.5904977375565611,
                        0.4095022624434389]
edit.dont-ask-to-fix-inconsistent-indents = {loc('file:C:/Program Files/Plone 3/Data/Products/ZMySQLDA/db.py'): 1}
edit.file-encoding = {loc('etc/CIF/thesis.rtf'): 'latin_1',
                      loc('etc/gui/settings.htm'): 'gb2312'}
edit.show-white-space = {loc('dictionary.txt'): 1}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '1It3EWvdTWW4nplesnAEPdgqwT'\
        'auAtrz',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0,
                                   1],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.23686274509803917,
                 'override_title': None,
                 'pagelist': [('indent',
                               'tall',
                               1,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(1,),
        (1,
         2),
        (1,
         2,
         0)],
                                 'selected-nodes': [(1,
        2,
        0,
        3)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/boost/libs/python/pyste/tests/abstract_testUT.py'),
                      '')]},
        loc('file:C:/Program Files/Plone 2/Data/Products/Fred/ChartPlot.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Program Files/Plone 2/Data/Products/Fred/ChartPlot.py'),
                      'a')]},
        loc('../cctbx_sources/libtbx/configure.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../cctbx_sources/libtbx/configure.py'),
                      'run')]},
        loc('../cctbx_sources/scitbx/scitbx/lbfgs.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../cctbx_sources/scitbx/scitbx/lbfgs.py'),
                      'core_parameters')]},
        loc('etc/gui/blocks/index-tools.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('etc/gui/blocks/snum-info.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('etc/gui/blocks/tool-header.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('etc/gui/cif.htm'): {'column-widths': [1.0],
                                 'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': None},
        loc('etc/gui/help.htm'): {'column-widths': [1.0],
                                  'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('etc/gui/model.htm'): {'column-widths': [1.0],
                                   'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None},
        loc('etc/gui/naming.htm'): {'column-widths': [1.0],
                                    'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('etc/gui/quick-drawing-styles.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('etc/gui/rotate.htm'): {'column-widths': [1.0],
                                    'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('etc/gui/settings.htm'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('etc/gui/space-groups.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('etc/gui/start.htm'): {'column-widths': [1.0],
                                   'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None},
        loc('etc/gui/symmetry-generation.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('etc/gui/tabs.htm'): {'column-widths': [1.0],
                                  'expanded-nodes': [],
                                  'selected-nodes': [None],
                                  'top-node': None},
        loc('etc/gui/toolbox-work.htm'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('etc/gui/tools.htm'): {'column-widths': [1.0],
                                   'expanded-nodes': [],
                                   'selected-nodes': [None],
                                   'top-node': None},
        loc('etc/news/content.htm'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('etc/news/news.htm'): {'column-widths': [1.0],
                                   'expanded-nodes': [],
                                   'selected-nodes': [None],
                                   'top-node': None},
        loc('initpy.py'): {'column-widths': [1.0],
                           'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('initpy.py'),
        'basedir')]},
        loc('macro.xld'): {'column-widths': [1.0],
                           'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('olx.py'): {'column-widths': [1.0],
                        'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('function def',
                                      loc('olx.py'),
                                      'Activate')]},
        loc('settings.xld'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('spy.py'): {'column-widths': [1.0],
                        'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('class def',
                                      loc('spy.py'),
                                      'Spy')]},
        loc('util/pyUtil/CctbxLib/cctbx_controller.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('util/pyUtil/CctbxLib/cctbx_controller.py'),
                      'gen_atoms')]},
        loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'),
                      'a')]},
        loc('util/pyUtil/cctbx/cctbx_refine.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('util/pyUtil/cctbx/cctbx_refine.py'),
                      'CctbxRefine')]},
        loc('util/pyUtil/cctbx/cctbx_sources/cctbx/cctbx/xray/scatterer.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('util/pyUtil/cctbx/cctbx_sources/cctbx/cctbx/xray/scatterer.py'),
                      'scatterer')]},
        loc('util/pyUtil/initpy.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('util/pyUtil/initpy.py'),
        'basedir')]},
        loc('util/pyUtil/src/CifInfo.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('util/pyUtil/src/CifInfo.py'),
                      'CifTools')]},
        loc('util/pyUtil/src/FileImporter.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('util/pyUtil/src/FileImporter.py'),
                      'a')]},
        u'All Classes': {'column-widths': [1.0],
                         'expanded-nodes': [],
                         'selected-nodes': [[('class def',
        loc('util/pyUtil/PythonLib/numpy/distutils/fcompiler/absoft.py'),
        'AbsoftFCompiler')]],
                         'top-node': [('class def',
                                       loc('util/pyUtil/PythonLib/numpy/distutils/fcompiler/absoft.py'),
                                       'AbsoftFCompiler')]},
        loc('util/pyUtil/olx.py'): {'column-widths': [1.0],
                                    'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('util/pyUtil/src/FileUploader.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('util/pyUtil/src/FileUploader.py'),
                      'a')]},
        loc('util/pyUtil/src/GuiMaker.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('util/pyUtil/src/GuiMaker.py'),
                      'make_tool_body')]},
        loc('util/pyUtil/src/History.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('util/pyUtil/src/History.py'),
                      'History')]},
        loc('util/pyUtil/src/auto_structure.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('util/pyUtil/src/auto_structure.py'),
                      'create_history')]},
        loc('util/pyUtil/src/pyTools.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('util/pyUtil/src/pyTools.py'),
                      'a')]}},
                                'browse_mode': u'All Classes',
                                'follow-selection': 0,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': 0,
        u'Imported': 0,
        u'Modules': 1}}),
                              ('templating#02EFWRQK9X23',
                               'tall',
                               0,
                               {'tree-states': {u'C:\\Documents and Settings\\Horst\\Application Data\\Wing IDE 3\\templates': [],
        u'C:\\Program Files\\Wing IDE 3.0\\scripts\\templates': []}})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [0,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.27482678983833719,
        'override_title': None,
        'pagelist': [('debug-stack',
                      'wide',
                      0,
                      {'codeline-mode': 'below'}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['self.structure_l\n',
        'ID = structure[1][0]\n',
        'l = structure[1]\n',
        'l\n',
        "ID = structure[1].get('ID')\n",
        'olx.FileFull()\n',
        'structure\n',
        'path\n',
        'oR1\n',
        'reappath\n',
        'olx.FileName()\n',
        'original_formula\n',
        'self.RList\n',
        'files\n',
        'ID\n',
        'value\n',
        'a.CFOM\n',
        'self.method\n',
        "olx.Popup(\"%s\"% name, wFilePath, \"-b=tc -t='%s'\" %name)\n",
        'wFilePath\n',
        'x\n',
        'olx.GetMouseX\n',
        'olx.GetMouseX()\n',
        'filename\n',
        'data\n',
        'colour\n',
        'arg\n',
        'help\n',
        'helpTxt = helpTxt.replace("\\r", "")\n',
        'helpTxt\n',
        's = str(s)\n',
        'str(helpTxt)\n',
        'regex = re.compile(r"  $ (.*?)( [^\\~\\~]* ) $ ", re.X)  \n',
        'regex = re.compile(r"  $ (.*?)( [^\\$\\$]* ) $ ", re.X)  \n',
        'regex = re.compile(r"  \\$ (.*?)( [^\\$\\$]* ) \\$ ", re.X)\n',
        'm = regex.findall(string)\n',
        'm\n',
        "s = regex.sub(r\"<tr><td><b>'%s'\\2</b></td><tr>\" %string)\n",
        's\n',
        'string\n',
        'str\n',
        'exec_l\n',
        'self.program\n',
        'a\n',
        'olx.xf_au_GetAtomCount()\n',
        'popout\n',
        'length\n',
        'boxHeight = length/2\n',
        'self.fileName\n',
        'self.hkl_src\n',
        'self.hkl_src_name\n',
        'copy_from\n',
        'copy_to\n',
        'number_minus\n',
        'number\n',
        'minus\n',
        'number*minus\n',
        'btn\n',
        'self.btn_dict\n',
        'width\n',
        'bgcolour\n',
        'size\n',
        'txt\n',
        'name\n',
        'grad\n',
        'crop\n',
        'return_to_menu_txt\n',
        'txt(return_to_menu_txt)\n',
        'str(return_to_menu_txt)\n',
        'self.formula\n',
        'olx.xf_GetFormula()\n',
        'item\n',
        'auto_assign\n',
        'height\n',
        'scaled_peak\n',
        'id = olx.xf_au_NewAtom(element)\n',
        'id\n',
        'peak\n',
        "auto_assign[element]['count']\n",
        '(sp-sp*0.1) < Z < (sp + sp*3)\n',
        'float(sp) > float(Z)\n',
        'max_Z\n',
        'sp\n',
        'Z\n',
        'element]\n',
        'element\n',
        'language\n',
        'lang\n',
        'R\n',
        'i\n',
        'image_exists = olex_fs.Exists("name")\n',
        'image_exists \n',
        'olex_fs.__doc__\n',
        'olex_fs.__doc__()\n',
        'olex_fs.Exists.__doc__\n',
        'res\n',
        'command\n',
        'command = "-q " + command\n',
        'args\n',
        'olx.File()\n'],
                                   u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'record\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        "res['ID']\n",
        'sourceData\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'syncTable\n',
        'ex\n',
        'rew\n',
        'self.tableMapping\n',
        'row\n',
        ' self.syncFields\n',
        'self.syncFields\n',
        'sourceFields\n',
        'self.fieldMapping\n',
        'syncFields\n',
        'mapping\n',
        'fieldStr\n',
        'self.Table\n',
        'self.sourceData[ID]\n',
        "self.sourceData[ID]['ID_service']\n",
        'IDs\n',
        'res[0]\n',
        "res[0]['ID']\n",
        "res[0]['id']\n",
        'ID\n',
        'self.table\n',
        'res\n',
        'snum\n',
        'sNum\n',
        'item[field]\n',
        'item\n',
        'sql\n',
        'table\n',
        'field\n',
        "Q = r\"UPDATE %s SET %s WHERE ID_xray = '%s'\" %(table, field, valu"\
        "e)\n",
        "a = '%s' %value\n",
        'a\n',
        " Q = r\"UPDATE %s SET %s WHERE ID_xray='%s'\" %(table, field, value"\
        ")\n",
        "Q = r\"UPDATE %s SET %s WHERE ID_xray='%s'\" %(table, field, value)"\
        "\n",
        'value\n',
        'Q\n'],
                                   u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['self.terminate\n',
        'if self.method\n',
        'self\n',
        'self.method\n']},
                       'sel-line': 2,
                       'sel-line-start': 145,
                       'selection_end': 149,
                       'selection_start': 149}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'current-file'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'SNUM_',
                                       'fReverse': False,
                                       'fSearchText': u'self.auto',
                                       'fStartPos': 0,
                                       'fStyle': 'wildcard',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': u'file:C:\\Documents and Settings\\Horst\\make',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': 1,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': 1},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('symbolic',
        ['a0']),
                                       ('symbolic',
        ['a']),
                                       ('symbolic',
        ['a']),
                                       ('symbolic',
        ['scatterer']),
                                       ('symbolic',
        ['minimisation']),
                                       ('symbolic',
        ['minimisation',
         '__dict__']),
                                       ('symbolic',
        ['minimisation',
         '__doc__']),
                                       ('symbolic',
        ['minimisation',
         '__module__']),
                                       ('symbolic',
        ['minimisation',
         '__weakref__']),
                                       ('symbolic',
        ['minimisation',
         'minimizer']),
                                       ('symbolic',
        ['minimisation',
         'minimizer']),
                                       ('symbolic',
        ['minimisation',
         'minimizer']),
                                       ('symbolic',
        ['minimiser']),
                                       ('symbolic',
        ['s']),
                                       ('symbolic',
        ['r']),
                                       ('symbolic',
        ['choice']),
                                       ('symbolic',
        ['twin_laws',
         '0']),
                                       ('symbolic',
        ['regex']),
                                       ('symbolic',
        ['m']),
                                       ('symbolic',
        ['item']),
                                       ('symbolic',
        ['self',
         'pt']),
                                       ('symbolic',
        ['all_cbtn_buttons']),
                                       ('symbolic',
        ['all_cbtn_buttons',
         'bgcolouroff']),
                                       ('symbolic',
        ['self']),
                                       ('symbolic',
        ['font_letter',
         'font']),
                                       ('symbolic',
        ['data_d'])],
                       'tree-state': {'column-widths': [0.45981308411214955,
        0.54018691588785051],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (7,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
        {'attrib-starts': [('RunPrgAuto',
                            36),
                           ('RunPrgAuto.deal_with_anis',
                            390)],
         'first-line': 408,
         'folded-linenos': [],
         'sel-line': 429,
         'sel-line-start': 17997,
         'selection_end': 17997,
         'selection_start': 17997},
        1225130864.437),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 402,
          'sel-line-start': 16482,
          'selection_end': 16482,
          'selection_start': 16482},
         1225130866.437),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 403,
          'sel-line-start': 16539,
          'selection_end': 16539,
          'selection_start': 16539},
         1225130867.437),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 404,
          'sel-line-start': 16596,
          'selection_end': 16596,
          'selection_start': 16596},
         1225130867.9530001),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 408,
          'sel-line-start': 16845,
          'selection_end': 16845,
          'selection_start': 16845},
         1225130868.5150001),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 412,
          'sel-line-start': 17133,
          'selection_end': 17133,
          'selection_start': 17133},
         1225130869.5),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 416,
          'sel-line-start': 17408,
          'selection_end': 17408,
          'selection_start': 17408},
         1225130870.5),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 417,
          'sel-line-start': 17440,
          'selection_end': 17440,
          'selection_start': 17440},
         1225130871.5),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 418,
          'sel-line-start': 17505,
          'selection_end': 17505,
          'selection_start': 17505},
         1225130872.0309999),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 419,
          'sel-line-start': 17564,
          'selection_end': 17564,
          'selection_start': 17564},
         1225130872.562),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 420,
          'sel-line-start': 17640,
          'selection_end': 17640,
          'selection_start': 17640},
         1225130873.109),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.deal_with_anis',
                             390)],
          'first-line': 397,
          'folded-linenos': [],
          'sel-line': 425,
          'sel-line-start': 17837,
          'selection_end': 17837,
          'selection_start': 17837},
         1225130873.609),
        (loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'),
         {'attrib-starts': [('RunPrgAuto',
                             36),
                            ('RunPrgAuto.runAfterProcess_terminated',
                             220)],
          'first-line': 222,
          'folded-linenos': [],
          'sel-line': 226,
          'sel-line-start': 8597,
          'selection_end': 8625,
          'selection_start': 8625},
         1225131007.6400001),
        (loc('util/pyUtil/PyToolLib/access_log_reader.py'),
         {'attrib-starts': [('reader',
                             14),
                            ('reader.get_IP_address',
                             63)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 63,
          'sel-line-start': 1692,
          'selection_end': 1725,
          'selection_start': 1725},
         1225382508.875),
        (loc('util/pyUtil/PyToolLib/FileReaders/access_log_reader.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 2796,
          'selection_start': 0},
         1225382749.4679999),
        (loc('../zope/2.10.5/Python/Scripts/olex2/parts/instance/Extensions/access_log_reader.py'),
         {'attrib-starts': [('run',
                             2)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 5,
          'sel-line-start': 115,
          'selection_end': 127,
          'selection_start': 127},
         1225385346.3900001),
        (loc('util/pyUtil/PyToolLib/FileReaders/access_log_reader.py'),
         {'attrib-starts': [],
          'first-line': 108,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 5223,
          'selection_start': 0},
         1225455879.921),
        (loc('util/pyUtil/CctbxLib/cctbx_controller.py'),
         {'attrib-starts': [('refinement',
                             157),
                            ('refinement.start_cctbx_refinement',
                             272)],
          'first-line': 255,
          'folded-linenos': [],
          'sel-line': 272,
          'sel-line-start': 8577,
          'selection_end': 8612,
          'selection_start': 8612},
         1225807749.9059999),
        (loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'),
         {'attrib-starts': [('OlexCctbxAdapter',
                             38),
                            ('OlexCctbxAdapter.runChargeFlippingSolution',
                             107)],
          'first-line': 505,
          'folded-linenos': [],
          'sel-line': 143,
          'sel-line-start': 4647,
          'selection_end': 4695,
          'selection_start': 4695},
         1225807812.75),
        [loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'),
         {'attrib-starts': [('OlexCctbxAdapter',
                             38),
                            ('OlexCctbxAdapter.post_peaks',
                             510)],
          'first-line': 505,
          'folded-linenos': [],
          'sel-line': 514,
          'sel-line-start': 18222,
          'selection_end': 18222,
          'selection_start': 18222},
         1225807854.7030001]],
        19),
        'current-loc': loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'),
        'editor-states': {loc('etc/gui/blocks/index-info.htm'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 1046,
        'selection_end': 1046,
        'selection_start': 1046},
                          loc('etc/gui/blocks/index-tools.htm'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 6,
        'sel-line-start': 865,
        'selection_end': 963,
        'selection_start': 954},
                          loc('etc/gui/blocks/logo.htm'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 37,
        'selection_start': 0},
                          loc('etc/gui/blocks/logo1.htm'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 37,
        'selection_start': 37},
                          loc('etc/gui/calculate-voids.htm'): {'attrib-start'\
        's': [],
        'first-line': 32,
        'sel-line': 50,
        'sel-line-start': 1365,
        'selection_end': 1375,
        'selection_start': 1375},
                          loc('etc/news/content.htm'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 226,
        'selection_end': 226,
        'selection_start': 226},
                          loc('etc/news/news.htm'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 116,
        'selection_end': 175,
        'selection_start': 122},
                          loc('macro.xld'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 2111,
        'selection_end': 2234,
        'selection_start': 2234},
                          loc('util/pyUtil/CctbxLib/cctbx_controller.py'): {''\
        'attrib-starts': [('refinement',
                           157),
                          ('refinement.start_cctbx_refinement',
                           272)],
        'first-line': 255,
        'folded-linenos': [],
        'sel-line': 272,
        'sel-line-start': 8577,
        'selection_end': 8612,
        'selection_start': 8612},
                          loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'): {''\
        'attrib-starts': [('OlexCctbxAdapter',
                           38),
                          ('OlexCctbxAdapter.post_peaks',
                           510)],
        'first-line': 505,
        'folded-linenos': [],
        'sel-line': 515,
        'sel-line-start': 18271,
        'selection_end': 18288,
        'selection_start': 18288},
                          loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'): {''\
        'attrib-starts': [('RunPrgAuto',
                           36),
                          ('RunPrgAuto.runAfterProcess_terminated',
                           220)],
        'first-line': 222,
        'folded-linenos': [],
        'sel-line': 226,
        'sel-line-start': 8597,
        'selection_end': 8625,
        'selection_start': 8625},
                          loc('util/pyUtil/PluginLib/plugin-AutoChem/autochem_config.txt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 176,
        'selection_end': 213,
        'selection_start': 213},
                          loc('util/pyUtil/PluginLib/plugin-AutoChem/plugin_autochem_exex.py'): {''\
        'attrib-starts': [('RBS',
                           28),
                          ('RBS.ac_run',
                           1461)],
        'first-line': 1444,
        'folded-linenos': [],
        'sel-line': 1462,
        'sel-line-start': 50350,
        'selection_end': 50350,
        'selection_start': 50350},
                          loc('util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py'): {''\
        'attrib-starts': [('DownloadOlexLanguageDictionary',
                           234),
                          ('DownloadOlexLanguageDictionary.get_help',
                           290)],
        'first-line': 296,
        'sel-line': 320,
        'sel-line-start': 10843,
        'selection_end': 10843,
        'selection_start': 10843},
                          loc('util/pyUtil/PyToolLib/Analysis.py'): {'attrib'\
        '-starts': [('Analysis',
                     28),
                    ('Analysis.run',
                     45)],
        'first-line': 40,
        'sel-line': 50,
        'sel-line-start': 1117,
        'selection_end': 1143,
        'selection_start': 1143},
                          loc('util/pyUtil/PyToolLib/AutoStructure.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 11,
        'selection_end': 88,
        'selection_start': 82},
                          loc('util/pyUtil/PyToolLib/ExternalPrgParameters.py'): {''\
        'attrib-starts': [('Program',
                           31),
                          ('Program.__init__',
                           32)],
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 38,
        'sel-line-start': 900,
        'selection_end': 921,
        'selection_start': 921},
                          loc('util/pyUtil/PyToolLib/FileReaders/access_log_reader.py'): {''\
        'attrib-starts': [],
        'first-line': 108,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 5223,
        'selection_start': 0},
                          loc('util/pyUtil/PyToolLib/History.py'): {'attrib-'\
        'starts': [('History',
                    312),
                   ('History.delete_history',
                    398)],
        'first-line': 397,
        'sel-line': 402,
        'sel-line-start': 12689,
        'selection_end': 12719,
        'selection_start': 12719},
                          loc('util/pyUtil/PyToolLib/PilTools.py'): {'attrib'\
        '-starts': [('timage',
                     945),
                    ('timage.__init__',
                     947)],
        'first-line': 1054,
        'folded-linenos': [],
        'sel-line': 1075,
        'sel-line-start': 38292,
        'selection_end': 38292,
        'selection_start': 38292},
                          loc('util/pyUtil/PyToolLib/RunPrg.py'): {'attrib-s'\
        'tarts': [('RunPrg',
                   25),
                  ('RunPrg.run',
                   316)],
        'first-line': 322,
        'folded-linenos': [],
        'sel-line': 333,
        'sel-line-start': 10818,
        'selection_end': 10818,
        'selection_start': 10818},
                          loc('util/pyUtil/PyToolLib/variableDefinitions.py'): {''\
        'attrib-starts': [('snumVariables',
                           59)],
        'first-line': 62,
        'folded-linenos': [],
        'sel-line': 92,
        'sel-line-start': 3580,
        'selection_end': 3627,
        'selection_start': 3627},
                          loc('util/pyUtil/variableFunctions.py'): {'attrib-'\
        'starts': [('Pickle',
                    253)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 255,
        'sel-line-start': 7879,
        'selection_end': 7889,
        'selection_start': 7889},
                          loc('util/pyUtil/variables.py'): {'attrib-starts': [(''\
        'Variable',
        2),
        ('Variable.__init__',
         3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 843,
        'selection_end': 845,
        'selection_start': 845},
                          loc('../zope/2.10.5/Python/Scripts/olex2/parts/instance/Extensions/access_log_reader.py'): {''\
        'attrib-starts': [('run',
                           2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 115,
        'selection_end': 127,
        'selection_start': 127}},
        'has-focus': True},
                               'open_files': [u'etc/gui/blocks/index-info.htm',
        u'etc/gui/blocks/index-tools.htm',
        u'etc/gui/blocks/logo.htm',
        u'etc/gui/blocks/logo1.htm',
        u'etc/gui/calculate-voids.htm',
        u'etc/news/content.htm',
        u'etc/news/news.htm',
        u'macro.xld',
        u'util/pyUtil/CctbxLib/cctbx_controller.py',
        u'util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py',
        u'util/pyUtil/PluginLib/plugin-AutoChem/autochem_config.txt',
        u'util/pyUtil/PluginLib/plugin-AutoChem/plugin_autochem_exex.py',
        u'util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py',
        u'util/pyUtil/PyToolLib/Analysis.py',
        u'util/pyUtil/PyToolLib/AutoStructure.py',
        u'util/pyUtil/PyToolLib/ExternalPrgParameters.py',
        u'util/pyUtil/PyToolLib/FileReaders/access_log_reader.py',
        u'util/pyUtil/PyToolLib/History.py',
        u'util/pyUtil/PyToolLib/PilTools.py',
        u'util/pyUtil/PyToolLib/RunPrg.py',
        u'util/pyUtil/PyToolLib/variableDefinitions.py',
        u'util/pyUtil/variableFunctions.py',
        u'util/pyUtil/variables.py',
        u'../zope/2.10.5/Python/Scripts/olex2/parts/instance/Extensions/access_log_reader.py',
        u'util/pyUtil/CctbxLib/cctbx_olex_adapter.py']},
        'split_percents': {0: 0.48293691830403307},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.71149425287356327},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (321,
                         0,
                         694,
                         929)}]}
guimgr.recent-documents = [loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py')]
guimgr.visual-state = {loc('file:C:/All Users/Documents/Olex2-CD/Olex2/util/pyUtil/initpy.py'): {''\
        'attrib-starts': [],
        'first-line': 7,
        'sel-line': 9,
        'sel-line-start': 115,
        'selection_end': 123,
        'selection_start': 123},
                       loc('file:C:/DS/Data/2006/06srv030/tables.html'): {'a'\
        'ttrib-starts': [],
        'first-line': 24,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/DS/durham_autosolve/horst/DebugUtil/OlexViewedModel.py'): {''\
        'attrib-starts': [('OlexViewedModel',
                           7)],
        'first-line': 38,
        'sel-line': 42,
        'sel-line-start': 1480,
        'selection_end': 1481,
        'selection_start': 1481},
                       loc('file:C:/DS/durham_autosolve/horst/Olex_pyTools/pyTools.py'): {''\
        'attrib-starts': [],
        'first-line': 24,
        'sel-line': 38,
        'sel-line-start': 887,
        'selection_end': 911,
        'selection_start': 887},
                       loc('file:C:/Plone 2/Python/Lib/site-packages/ping/ping.py'): {''\
        'attrib-starts': [],
        'first-line': 121,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Olex2/spy.py'): {'attrib-s'\
        'tarts': [('Spy',
                   29),
                  ('Spy.run',
                   34)],
        'first-line': 27,
        'sel-line': 58,
        'sel-line-start': 1316,
        'selection_end': 1318,
        'selection_start': 1318},
                       loc('file:C:/Program Files/Olex2/util/pyUtil/initpy.py'): {''\
        'attrib-starts': [('set_olex_paths',
                           39)],
        'first-line': 31,
        'sel-line': 43,
        'sel-line-start': 902,
        'selection_end': 904,
        'selection_start': 904},
                       loc('file:C:/Program Files/Olex2/util/pyUtil/spy.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 69,
        'selection_end': 69,
        'selection_start': 69},
                       loc('file:C:/Program Files/Olex2/util/pyUtil/src/History.py'): {''\
        'attrib-starts': [('History',
                           13),
                          ('History.do_bars',
                           115)],
        'first-line': 164,
        'sel-line': 175,
        'sel-line-start': 4823,
        'selection_end': 4823,
        'selection_start': 4823},
                       loc('file:C:/Program Files/Plone 2/Data/Extensions/ChemDB_ext.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 2/Data/Extensions/list_items.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 2/Data/Products/Fred/ChartPlot.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 2/Data/Products/Fred/MyContentType.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 2/Data/Products/Fred/plotPyChart.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 2/Data/Products/Fred/version.txt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Extensions/do_tex_submission.py'): {''\
        'attrib-starts': [('tex',
                           8)],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 236,
        'selection_end': 246,
        'selection_start': 246},
                       loc('file:C:/Program Files/Plone 3/Data/Products/CMFPlone/skins/plone_templates/main_template.pt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/SQL/DBConn.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/SQL/SQLFactory.py'): {''\
        'attrib-starts': [('SQLFactory',
                           21),
                          ('SQLFactory.escape_characters',
                           32)],
        'first-line': 27,
        'sel-line': 32,
        'sel-line-start': 798,
        'selection_end': 821,
        'selection_start': 804},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/dlDisplayTools.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/dlTools.py'): {''\
        'attrib-starts': [('DLTools',
                           16),
                          ('DLTools.format_reference',
                           245)],
        'first-line': 260,
        'sel-line': 263,
        'sel-line-start': 8234,
        'selection_end': 8236,
        'selection_start': 8236},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/dl_box.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/tex_submission.cpy'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/www/main_template.pt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/www/structures_tem.pt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/Dimas/www/submission_ctem.pt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/PloneSilverCity/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Program Files/Plone 3/Data/Products/ZMySQLDA/db.py'): {''\
        'attrib-starts': [('DB',
                           155),
                          ('DB.query',
                           272)],
        'first-line': 276,
        'sel-line': 279,
        'sel-line-start': 10335,
        'selection_end': 10387,
        'selection_start': 10387},
                       loc('file:C:/Program Files/Plone 3/Zope/lib/python/Products/PageTemplates/Expressions.py'): {''\
        'attrib-starts': [('ZopeContext',
                           191),
                          ('ZopeContext.evaluateStructure',
                           219)],
        'first-line': 200,
        'sel-line': 221,
        'sel-line-start': 8277,
        'selection_end': 8277,
        'selection_start': 8277},
                       loc('file:C:/Program Files/Plone 3/Zope/lib/python/Products/PageTemplates/ZRPythonExpr.py'): {''\
        'attrib-starts': [],
        'first-line': 27,
        'sel-line': 48,
        'sel-line-start': 2067,
        'selection_end': 2067,
        'selection_start': 2067},
                       loc('file:C:/Program Files/Plone 3/Zope/lib/python/Shared/DC/ZRDB/DA.py'): {''\
        'attrib-starts': [('DA',
                           70),
                          ('DA.__call__',
                           436)],
        'first-line': 443,
        'sel-line': 448,
        'sel-line-start': 17534,
        'selection_end': 17534,
        'selection_start': 17534},
                       loc('file:C:/Program Files/Plone 3/Zope/lib/python/zope/tal/talinterpreter.py'): {''\
        'attrib-starts': [('TALInterpreter',
                           113),
                          ('TALInterpreter.interpret',
                           330)],
        'first-line': 339,
        'sel-line': 344,
        'sel-line-start': 12690,
        'selection_end': 12690,
        'selection_start': 12690},
                       loc('file:C:/Program Files/Plone 3/Zope/lib/python/zope/tales/tales.py'): {''\
        'attrib-starts': [('Context',
                           611),
                          ('Context.evaluate',
                           690)],
        'first-line': 674,
        'sel-line': 695,
        'sel-line-start': 18728,
        'selection_end': 18728,
        'selection_start': 18728},
                       loc('file:C:/Program Files/Wing IDE 2.0/resources/doc/en/TOC.idx'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Python24/Lib/linecache.py'): {'attrib-st'\
        'arts': [('getline',
                  12)],
        'first-line': 8,
        'sel-line': 15,
        'sel-line-start': 373,
        'selection_end': 373,
        'selection_start': 373},
                       loc('file:C:/Python24/Lib/site-packages/MySQLdb/__init__.py'): {''\
        'attrib-starts': [('Connect',
                           62)],
        'first-line': 52,
        'sel-line': 65,
        'sel-line-start': 1956,
        'selection_end': 1956,
        'selection_start': 1956},
                       loc('file:C:/Python24/Lib/site-packages/MySQLdb/connections.py'): {''\
        'attrib-starts': [('Connection',
                           35),
                          ('Connection.cursor',
                           158)],
        'first-line': 146,
        'sel-line': 167,
        'sel-line-start': 5335,
        'selection_end': 5335,
        'selection_start': 5335},
                       loc('file:C:/Python24/Lib/site-packages/MySQLdb/cursors.py'): {''\
        'attrib-starts': [('BaseCursor',
                           14),
                          ('BaseCursor.execute',
                           102)],
        'first-line': 95,
        'sel-line': 116,
        'sel-line-start': 3569,
        'selection_end': 3569,
        'selection_start': 3569},
                       loc('file:C:/Python24/Lib/site-packages/PIL/BmpImagePlugin.py'): {''\
        'attrib-starts': [('_save',
                           191)],
        'first-line': 0,
        'sel-line': 196,
        'sel-line-start': 5141,
        'selection_end': 5141,
        'selection_start': 5141},
                       loc('file:C:/Python24/Lib/site-packages/PIL/Image.py'): {''\
        'attrib-starts': [('merge',
                           1818)],
        'first-line': 1727,
        'sel-line': 1825,
        'sel-line-start': 59549,
        'selection_end': 59549,
        'selection_start': 59549},
                       loc('file:C:/Python24/Lib/site-packages/PIL/ImageChops.py'): {''\
        'attrib-starts': [('duplicate',
                           53)],
        'first-line': 42,
        'sel-line': 56,
        'sel-line-start': 1608,
        'selection_end': 1608,
        'selection_start': 1608},
                       loc('file:C:/Python24/Lib/site-packages/PIL/ImageDraw.py'): {''\
        'attrib-starts': [('ImageDraw',
                           44),
                          ('ImageDraw.pieslice',
                           215)],
        'first-line': 199,
        'sel-line': 218,
        'sel-line-start': 6907,
        'selection_end': 6967,
        'selection_start': 6967},
                       loc('file:C:/Python24/Lib/site-packages/PIL/ImageFile.py'): {''\
        'attrib-starts': [('_save',
                           455)],
        'first-line': 459,
        'sel-line': 473,
        'sel-line-start': 14239,
        'selection_end': 14239,
        'selection_start': 14239},
                       loc('file:C:/Python24/Lib/site-packages/boa-constructor/__version__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Python24/Scripts/optilux/bin/buildout-script.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Python24/Scripts/optilux/bin/parts/zope2/setup.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/Python25/Lib/site-packages/MySQLdb/connections.py'): {''\
        'attrib-starts': [('defaulterrorhandler',
                           15)],
        'first-line': 15,
        'sel-line': 34,
        'sel-line-start': 1060,
        'selection_end': 1060,
        'selection_start': 1060},
                       loc('file:C:/Python25/Lib/site-packages/MySQLdb/cursors.py'): {''\
        'attrib-starts': [('BaseCursor',
                           14),
                          ('BaseCursor.execute',
                           128)],
        'first-line': 149,
        'sel-line': 165,
        'sel-line-start': 5445,
        'selection_end': 5445,
        'selection_start': 5445},
                       loc('file:C:/bn/src/auto_solution_engine/Hydrogenisation.py'): {''\
        'attrib-starts': [('CH3',
                           122),
                          ('CH3._accept',
                           178)],
        'first-line': 157,
        'sel-line': 179,
        'sel-line-start': 5418,
        'selection_end': 5434,
        'selection_start': 5428},
                       loc('file:C:/bn/src/auto_solution_engine/ShelX97Factory.py'): {''\
        'attrib-starts': [],
        'first-line': 73,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/bn/src/auto_solution_engine/ShelX97Run.py'): {''\
        'attrib-starts': [('ShelXProcess',
                           41),
                          ('ShelXProcess.run',
                           84)],
        'first-line': 78,
        'sel-line': 98,
        'sel-line-start': 2747,
        'selection_end': 2931,
        'selection_start': 2749},
                       loc('file:C:/bn/src/auto_solution_engine/StructureModel.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 267,
        'selection_end': 267,
        'selection_start': 267},
                       loc('file:C:/bn/src/auto_solution_engine/Util/MoreNumeric.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 43,
        'selection_end': 43,
        'selection_start': 43},
                       loc('file:C:/bn/src/auto_solution_engine/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:C:/bn/src/auto_solution_engine/translation.txt'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 10,
        'selection_start': 10},
                       loc('file:c:/Python25/Lib/UserList.py'): {'attrib-sta'\
        'rts': [('UserList',
                 2),
                ('UserList.__getitem__',
                 27)],
        'first-line': 8,
        'sel-line': 27,
        'sel-line-start': 1272,
        'selection_end': 1272,
        'selection_start': 1272},
                       loc('file:c:/Python25/Lib/atexit.py'): {'attrib-start'\
        's': [('_run_exitfuncs',
               12)],
        'first-line': 8,
        'sel-line': 26,
        'sel-line-start': 622,
        'selection_end': 637,
        'selection_start': 637},
                       loc('file:c:/Python25/Lib/encodings/__init__.py'): {''\
        'attrib-starts': [('search_function',
                           69)],
        'first-line': 95,
        'sel-line': 111,
        'sel-line-start': 3950,
        'selection_end': 3972,
        'selection_start': 3972},
                       loc('file:c:/Python25/Lib/ntpath.py'): {'attrib-start'\
        's': [('getctime',
               237)],
        'first-line': 234,
        'sel-line': 239,
        'sel-line-start': 7632,
        'selection_end': 7632,
        'selection_start': 7632},
                       loc('file:c:/Python25/Lib/os.py'): {'attrib-starts': [(''\
        'execl',
        310)],
        'first-line': 291,
        'sel-line': 315,
        'sel-line-start': 10075,
        'selection_end': 10075,
        'selection_start': 10075},
                       loc('file:c:/Python25/Lib/re.py'): {'attrib-starts': [(''\
        '_compile',
        218)],
        'first-line': 213,
        'sel-line': 232,
        'sel-line-start': 9922,
        'selection_end': 9922,
        'selection_start': 9922},
                       loc('file:c:/Python25/Lib/site-packages/MySQLdb/__init__.py'): {''\
        'attrib-starts': [('Connect',
                           70)],
        'first-line': 53,
        'sel-line': 73,
        'sel-line-start': 2281,
        'selection_end': 2281,
        'selection_start': 2281},
                       loc('file:c:/Python25/Lib/site-packages/PIL/ImageDraw.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:c:/Python25/Lib/site-packages/PIL/ImageFont.py'): {''\
        'attrib-starts': [('truetype',
                           201)],
        'first-line': 188,
        'sel-line': 201,
        'sel-line-start': 6754,
        'selection_end': 6766,
        'selection_start': 6758},
                       loc('file:c:/Python25/Lib/site-packages/PIL/PcfFontFile.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:c:/Python25/Lib/site.py'): {'attrib-starts': [(''\
        '_Helper',
        334),
        ('_Helper.__call__',
         343)],
        'first-line': 326,
        'sel-line': 344,
        'sel-line-start': 12259,
        'selection_end': 12259,
        'selection_start': 12259},
                       loc('file:c:/Python25/Lib/sre_parse.py'): {'attrib-st'\
        'arts': [('expand_template',
                  783)],
        'first-line': 775,
        'sel-line': 794,
        'sel-line-start': 27600,
        'selection_end': 27600,
        'selection_start': 27600},
                       loc('file:c:/Python25/Lib/threading.py'): {'attrib-st'\
        'arts': [('_Condition',
                  154),
                 ('_Condition.notify',
                  246)],
        'first-line': 244,
        'sel-line': 258,
        'sel-line-start': 8336,
        'selection_end': 8352,
        'selection_start': 8352},
                       loc('../Application Data/Olex2/olx.py'): {'attrib-sta'\
        'rts': [('SetVar',
                 623)],
        'first-line': 683,
        'sel-line': 631,
        'sel-line-start': 11334,
        'selection_end': 11353,
        'selection_start': 11353},
                       loc('../Application Data/Olex2u/olx.py'): {'attrib-st'\
        'arts': [('html_Load',
                  2995)],
        'first-line': 2972,
        'sel-line': 2997,
        'sel-line-start': 55429,
        'selection_end': 55429,
        'selection_start': 55429},
                       loc('../Horst/cctbx/cctbx_sources/boost_adaptbx/boost/python.py'): {''\
        'attrib-starts': [('import_ext',
                           11)],
        'first-line': 10,
        'sel-line': 23,
        'sel-line-start': 753,
        'selection_end': 753,
        'selection_start': 753},
                       loc('../Horst/cctbx/cctbx_sources/cctbx/cctbx/crystal/__init__.py'): {''\
        'attrib-starts': [('symmetry',
                           29),
                          ('symmetry.__init__',
                           31)],
        'first-line': 29,
        'sel-line': 46,
        'sel-line-start': 1506,
        'selection_end': 1506,
        'selection_start': 1506},
                       loc('../Horst/cctbx/cctbx_sources/cctbx/cctbx/maptbx/__init__.py'): {''\
        'attrib-starts': [('crystal_gridding_tags',
                           147),
                          ('crystal_gridding_tags.peak_search',
                           161)],
        'first-line': 154,
        'sel-line': 165,
        'sel-line-start': 5130,
        'selection_end': 5130,
        'selection_start': 5130},
                       loc('../Horst/cctbx/cctbx_sources/cctbx/cctbx/miller.py'): {''\
        'attrib-starts': [('fft_map',
                           2520),
                          ('fft_map.peak_search',
                           2591)],
        'first-line': 2575,
        'sel-line': 2595,
        'sel-line-start': 93627,
        'selection_end': 93627,
        'selection_start': 93627},
                       loc('../Horst/cctbx/cctbx_sources/cctbx/cctbx/sgtbx/__init__.py'): {''\
        'attrib-starts': [('space_group_info',
                           26),
                          ('space_group_info.__init__',
                           30)],
        'first-line': 31,
        'sel-line': 51,
        'sel-line-start': 1320,
        'selection_end': 1320,
        'selection_start': 1320},
                       loc('../Horst/cctbx/cctbx_sources/cctbx/cctbx/xray/target_functors.py'): {''\
        'attrib-starts': [('least_squares_residual',
                           230),
                          ('least_squares_residual.__init__',
                           233)],
        'first-line': 239,
        'sel-line': 263,
        'sel-line-start': 11152,
        'selection_end': 11152,
        'selection_start': 11152},
                       loc('../Local Settings/Application Data/Wing IDE 3/pi-cache/2.5/C/Python25/lib/site-packages/PIL/_imagingft.pi'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 42,
        'selection_end': 53,
        'selection_start': 46},
                       loc('../Olex2-CD/Olex2/util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/configure.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx/cctbx_sources/cctbx/adptbx/boost_python/SConscript'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx/cctbx_sources/cctbx/cctbx/crystal/__init__.py'): {''\
        'attrib-starts': [('special_position_settings',
                           319),
                          ('special_position_settings.min_distance_sym_equiv',
                           336)],
        'first-line': 317,
        'sel-line': 337,
        'sel-line-start': 12731,
        'selection_end': 12731,
        'selection_start': 12731},
                       loc('../cctbx/cctbx_sources/cctbx/cctbx/miller.py'): {''\
        'attrib-starts': [('array',
                           1171),
                          ('array.sigmas',
                           1210)],
        'first-line': 1191,
        'sel-line': 1211,
        'sel-line-start': 44416,
        'selection_end': 44416,
        'selection_start': 44416},
                       loc('../cctbx/cctbx_sources/cctbx/cctbx/xray/minimization.py'): {''\
        'attrib-starts': [('lbfgs',
                           47),
                          ('lbfgs.apply_shifts',
                           123)],
        'first-line': 117,
        'sel-line': 137,
        'sel-line-start': 6056,
        'selection_end': 6056,
        'selection_start': 6056},
                       loc('../cctbx/cctbx_sources/cctbx/include/cctbx/maptbx/grid_tags.h'): {''\
        'attrib-starts': [],
        'first-line': 258,
        'sel-line': 269,
        'sel-line-start': 8922,
        'selection_end': 8957,
        'selection_start': 8957},
                       loc('../cctbx/cctbx_sources/cctbx/include/cctbx/maptbx/statistics.h'): {''\
        'attrib-starts': [],
        'first-line': 18,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx/cctbx_sources/libtbx/SConscript'): {'at'\
        'trib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx/cctbx_sources/libtbx/configure.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx/cctbx_sources/libtbx/libtbx/command_line/scons.py'): {''\
        'attrib-starts': [('run',
                           21)],
        'first-line': 21,
        'sel-line': 41,
        'sel-line-start': 1473,
        'selection_end': 1473,
        'selection_start': 1473},
                       loc('../cctbx/cctbx_sources/libtbx/libtbx/config.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx/cctbx_sources/scons/src/engine/SCons/Builder.py'): {''\
        'attrib-starts': [],
        'first-line': 97,
        'sel-line': 116,
        'sel-line-start': 4457,
        'selection_end': 4457,
        'selection_start': 4457},
                       loc('../cctbx/cctbx_sources/scons/src/engine/SCons/Node/__init__.py'): {''\
        'attrib-starts': [('NodeList',
                           1120)],
        'first-line': 1104,
        'sel-line': 1123,
        'sel-line-start': 39552,
        'selection_end': 39552,
        'selection_start': 39552},
                       loc('../cctbx/cctbx_sources/scons/src/engine/SCons/Script/Main.py'): {''\
        'attrib-starts': [('_main',
                           1034)],
        'first-line': 1109,
        'sel-line': 1128,
        'sel-line-start': 45138,
        'selection_end': 45138,
        'selection_start': 45138},
                       loc('../cctbx/cctbx_sources/scons/src/engine/SCons/Script/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 359,
        'sel-line': 77,
        'sel-line-start': 3029,
        'selection_end': 3029,
        'selection_start': 3029},
                       loc('../cctbx_sources/cctbx/cctbx/crystal/__init__.py'): {''\
        'attrib-starts': [('symmetry',
                           23),
                          ('symmetry.unit_cell',
                           62)],
        'first-line': 34,
        'sel-line': 63,
        'sel-line-start': 2407,
        'selection_end': 2407,
        'selection_start': 2407},
                       loc('../cctbx_sources/cctbx/cctbx/maptbx/__init__.py'): {''\
        'attrib-starts': [('crystal_gridding_tags',
                           147),
                          ('crystal_gridding_tags.peak_search',
                           161)],
        'first-line': 149,
        'sel-line': 165,
        'sel-line-start': 5130,
        'selection_end': 5130,
        'selection_start': 5130},
                       loc('../cctbx_sources/cctbx/cctbx/miller.py'): {'attr'\
        'ib-starts': [('fft_map',
                       2467),
                      ('fft_map.peak_search',
                       2538)],
        'first-line': 2522,
        'sel-line': 2542,
        'sel-line-start': 92040,
        'selection_end': 92040,
        'selection_start': 92040},
                       loc('../cctbx_sources/cctbx/cctbx/uctbx/__init__.py'): {''\
        'attrib-starts': [('unit_cell',
                           10),
                          ('unit_cell.__init__',
                           12)],
        'first-line': 7,
        'sel-line': 19,
        'sel-line-start': 515,
        'selection_end': 515,
        'selection_start': 515},
                       loc('../cctbx_sources/cctbx/cctbx/xray/minimization.py'): {''\
        'attrib-starts': [('lbfgs',
                           53),
                          ('lbfgs.apply_shifts',
                           95)],
        'first-line': 58,
        'sel-line': 100,
        'sel-line-start': 4019,
        'selection_end': 4054,
        'selection_start': 4054},
                       loc('../cctbx_sources/cctbx/cctbx/xray/scatterer.py'): {''\
        'attrib-starts': [('scatterer',
                           8),
                          ('scatterer.__init__',
                           10)],
        'first-line': 0,
        'sel-line': 25,
        'sel-line-start': 732,
        'selection_end': 732,
        'selection_start': 732},
                       loc('../cctbx_sources/iotbx/SConscript'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx_sources/iotbx/iotbx/reflection_file_reader.py'): {''\
        'attrib-starts': [('any_reflection_file',
                           19),
                          ('any_reflection_file.__init__',
                           21)],
        'first-line': 34,
        'sel-line': 49,
        'sel-line-start': 1951,
        'selection_end': 1951,
        'selection_start': 1951},
                       loc('../cctbx_sources/iotbx/iotbx/shelx/hklf.py'): {''\
        'attrib-starts': [('reader',
                           18),
                          ('reader.__init__',
                           20)],
        'first-line': 18,
        'sel-line': 34,
        'sel-line-start': 1091,
        'selection_end': 1121,
        'selection_start': 1121},
                       loc('../cctbx_sources/libtbx/SConscript'): {'attrib-s'\
        'tarts': [],
        'first-line': 114,
        'sel-line': 133,
        'sel-line-start': 4260,
        'selection_end': 4260,
        'selection_start': 4260},
                       loc('../cctbx_sources/libtbx/configure.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx_sources/libtbx/libtbx/command_line/scons.py'): {''\
        'attrib-starts': [('run',
                           21)],
        'first-line': 21,
        'sel-line': 41,
        'sel-line-start': 1473,
        'selection_end': 1473,
        'selection_start': 1473},
                       loc('../cctbx_sources/libtbx/libtbx/subprocess_with_fixes.py'): {''\
        'attrib-starts': [('CalledProcessError',
                           362),
                          ('CalledProcessError.__str__',
                           369)],
        'first-line': 353,
        'sel-line': 374,
        'sel-line-start': 12014,
        'selection_end': 12014,
        'selection_start': 12014},
                       loc('../cctbx_sources/libtbx/libtbx/test_utils.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 28,
        'selection_end': 28,
        'selection_start': 28},
                       loc('../cctbx_sources/libtbx/libtbx/utils.py'): {'att'\
        'rib-starts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 85,
        'selection_end': 85,
        'selection_start': 85},
                       loc('../cctbx_sources/libtbx/stdlib.py'): {'attrib-st'\
        'arts': [('import_module',
                  4)],
        'first-line': 2,
        'sel-line': 24,
        'sel-line-start': 551,
        'selection_end': 551,
        'selection_start': 551},
                       loc('../cctbx_sources/scitbx/scitbx/array_family/flex.py'): {''\
        'attrib-starts': [('_min_max_mean_double',
                           96)],
        'first-line': 243,
        'sel-line': 96,
        'sel-line-start': 2512,
        'selection_end': 2512,
        'selection_start': 2512},
                       loc('../cctbx_sources/scitbx/scitbx/lbfgs.py'): {'att'\
        'rib-starts': [('run_c_plus_plus',
                        74)],
        'first-line': 28,
        'sel-line': 92,
        'sel-line-start': 3434,
        'selection_end': 3434,
        'selection_start': 3434},
                       loc('../cctbx_sources/scons/src/engine/SCons/Action.py'): {''\
        'attrib-starts': [],
        'first-line': 80,
        'sel-line': 99,
        'sel-line-start': 4192,
        'selection_end': 4192,
        'selection_start': 4192},
                       loc('../cctbx_sources/scons/src/engine/SCons/Builder.py'): {''\
        'attrib-starts': [],
        'first-line': 111,
        'sel-line': 116,
        'sel-line-start': 4457,
        'selection_end': 4457,
        'selection_start': 4457},
                       loc('../cctbx_sources/scons/src/engine/SCons/Node/__init__.py'): {''\
        'attrib-starts': [('Node',
                           161),
                          ('Node.explain',
                           1033),
                          ('Node.explain.fmt_with_title',
                           1092)],
        'first-line': 1106,
        'sel-line': 1118,
        'sel-line-start': 39473,
        'selection_end': 39473,
        'selection_start': 39473},
                       loc('../cctbx_sources/scons/src/engine/SCons/Script/Main.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx_sources/scons/src/engine/SCons/Script/SConscript.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../cctbx_sources/scons/src/engine/SCons/Util.py'): {''\
        'attrib-starts': [('DisplayEngine',
                           204),
                          ('DisplayEngine.print_it',
                           208)],
        'first-line': 191,
        'sel-line': 210,
        'sel-line-start': 6932,
        'selection_end': 6932,
        'selection_start': 6932},
                       loc('../dl_box_dimas.py'): {'attrib-starts': [('getLo'\
        'okupFields',
        249)],
        'first-line': 265,
        'sel-line': 274,
        'sel-line-start': 9294,
        'selection_end': 9294,
        'selection_start': 9294},
                       loc('Copy of runonce.firstsetup.run'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('_runonce.firstsetup.run'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('auto.xld'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('custom.xld'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dictionary.txt'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 9,
        'sel-line-start': 391,
        'selection_end': 426,
        'selection_start': 426},
                       loc('dimas/MySQL Dimas/View Definitions/ALL VIEWS.sql'): {''\
        'attrib-starts': [],
        'first-line': 347,
        'sel-line': 382,
        'sel-line-start': 13012,
        'selection_end': 13065,
        'selection_start': 13065},
                       loc('dimas/dimas/portal_skins/custom/dlbits/dlPortalTools.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/CIF/Copy of template.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 35,
        'sel-line-start': 2191,
        'selection_end': 2217,
        'selection_start': 2210},
                       loc('etc/CIF/cifindex.dat'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/CIF/extract.cif'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/CIF/footer.html'): {'attrib-starts': [],
        'first-line': 427,
        'sel-line': 453,
        'sel-line-start': 15177,
        'selection_end': 15229,
        'selection_start': 15222},
                       loc('etc/CIF/tables.xlt'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 46,
        'sel-line-start': 1816,
        'selection_end': 1876,
        'selection_start': 1869},
                       loc('etc/CIF/template.doc'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/CIF/template.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 35,
        'sel-line-start': 2191,
        'selection_end': 2217,
        'selection_start': 2210},
                       loc('etc/CIF/templates.doc'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/CIF/templates.htm'): {'attrib-starts': [],
        'first-line': 36,
        'sel-line': 82,
        'sel-line-start': 1715,
        'selection_end': 1748,
        'selection_start': 1741},
                       loc('etc/CIF/thesis.html'): {'attrib-starts': [],
        'first-line': 423,
        'sel-line': 437,
        'sel-line-start': 12830,
        'selection_end': 12836,
        'selection_start': 12836},
                       loc('etc/CIF/thesis.rtf'): {'attrib-starts': [],
        'first-line': 262,
        'sel-line': 288,
        'sel-line-start': 10381,
        'selection_end': 10433,
        'selection_start': 10426},
                       loc('etc/CIF/thesis_.html'): {'attrib-starts': [],
        'first-line': 334,
        'sel-line': 360,
        'sel-line-start': 13470,
        'selection_end': 13522,
        'selection_start': 13515},
                       loc('etc/CIF/thesis__.html'): {'attrib-starts': [],
        'first-line': 187,
        'sel-line': 213,
        'sel-line-start': 7905,
        'selection_end': 7957,
        'selection_start': 7950},
                       loc('etc/gui/archive.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 23,
        'sel-line-start': 632,
        'selection_end': 643,
        'selection_start': 640},
                       loc('etc/gui/auto-structure.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/autochem.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 262,
        'selection_end': 295,
        'selection_start': 287},
                       loc('etc/gui/autosolve.htm'): {'attrib-starts': [],
        'first-line': 4,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/bad-reflections.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 269,
        'selection_end': 302,
        'selection_start': 294},
                       loc('etc/gui/batch.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/blocks/chinese.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 70,
        'selection_end': 70,
        'selection_start': 70},
                       loc('etc/gui/blocks/help-top.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/blocks/index-custom.htm'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/blocks/index-home-e.htm'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 2,
        'selection_end': 99,
        'selection_start': 2},
                       loc('etc/gui/blocks/index-home.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 205,
        'selection_end': 294,
        'selection_start': 205},
                       loc('etc/gui/blocks/index-info.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 6,
        'sel-line-start': 873,
        'selection_end': 1027,
        'selection_start': 1015},
                       loc('etc/gui/blocks/index-tabs.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 281,
        'selection_end': 372,
        'selection_start': 372},
                       loc('etc/gui/blocks/index-tools.htm'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 416,
        'selection_end': 526,
        'selection_start': 526},
                       loc('etc/gui/blocks/index-view.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 6,
        'sel-line-start': 909,
        'selection_end': 965,
        'selection_start': 965},
                       loc('etc/gui/blocks/index-work.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 254,
        'selection_end': 373,
        'selection_start': 254},
                       loc('etc/gui/blocks/logo.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 33,
        'selection_start': 33},
                       loc('etc/gui/blocks/logo1.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 44,
        'selection_start': 44},
                       loc('etc/gui/blocks/more-snum-info.htm'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 16,
        'sel-line-start': 359,
        'selection_end': 363,
        'selection_start': 363},
                       loc('etc/gui/blocks/r-info.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 17,
        'selection_end': 17,
        'selection_start': 17},
                       loc('etc/gui/blocks/refl-info.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 18,
        'selection_start': 4},
                       loc('etc/gui/blocks/snum-info.htm'): {'attrib-starts': [],
        'first-line': 13,
        'sel-line': 23,
        'sel-line-start': 852,
        'selection_end': 905,
        'selection_start': 905},
                       loc('etc/gui/blocks/tab-off.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 111,
        'selection_end': 114,
        'selection_start': 114},
                       loc('etc/gui/blocks/tab-on.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 37,
        'selection_end': 39,
        'selection_start': 39},
                       loc('etc/gui/blocks/tab.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 251,
        'selection_end': 251,
        'selection_start': 251},
                       loc('etc/gui/blocks/tool-footer.htm'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 19,
        'selection_end': 19,
        'selection_start': 19},
                       loc('etc/gui/blocks/tool-h3-off.htm'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 67,
        'selection_end': 112,
        'selection_start': 104},
                       loc('etc/gui/blocks/tool-h3.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 112,
        'selection_start': 112},
                       loc('etc/gui/blocks/tool-header.htm'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 139,
        'selection_end': 139,
        'selection_start': 139},
                       loc('etc/gui/blocks/tool-off-level1.htm'): {'attrib-s'\
        'tarts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 139,
        'selection_end': 201,
        'selection_start': 201},
                       loc('etc/gui/blocks/tool-off.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 152,
        'selection_end': 171,
        'selection_start': 171},
                       loc('etc/gui/blocks/tool-top.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 56,
        'selection_start': 0},
                       loc('etc/gui/blocks/tool_switch.htm'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 109,
        'selection_start': 109},
                       loc('etc/gui/blocks/twin-law.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 37,
        'selection_end': 47,
        'selection_start': 47},
                       loc('etc/gui/cctbx.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 142,
        'selection_end': 205,
        'selection_start': 194},
                       loc('etc/gui/cif.htm'): {'attrib-starts': [],
        'first-line': 65,
        'sel-line': 75,
        'sel-line-start': 3566,
        'selection_end': 3602,
        'selection_start': 3594},
                       loc('etc/gui/crystal.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 41,
        'sel-line-start': 1689,
        'selection_end': 1748,
        'selection_start': 1748},
                       loc('etc/gui/deleted/info-sNum.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 41,
        'sel-line-start': 687,
        'selection_end': 729,
        'selection_start': 729},
                       loc('etc/gui/deleted/info-title.htm'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 41,
        'sel-line-start': 687,
        'selection_end': 729,
        'selection_start': 729},
                       loc('etc/gui/deleted/snum-info.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 25,
        'sel-line-start': 452,
        'selection_end': 484,
        'selection_start': 484},
                       loc('etc/gui/diagnostics.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 148,
        'selection_end': 164,
        'selection_start': 164},
                       loc('etc/gui/disorder.htm'): {'attrib-starts': [],
        'first-line': 15,
        'sel-line': 38,
        'sel-line-start': 1052,
        'selection_end': 1111,
        'selection_start': 1111},
                       loc('etc/gui/electron-density.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 270,
        'selection_end': 303,
        'selection_start': 295},
                       loc('etc/gui/fonts/otf2bdf3/maps/iso8859.5'): {'attri'\
        'b-starts': [],
        'first-line': 206,
        'sel-line': 222,
        'sel-line-start': 7330,
        'selection_end': 7374,
        'selection_start': 7372},
                       loc('etc/gui/fonts/otf2bdf3/maps/koi8.r'): {'attrib-s'\
        'tarts': [],
        'first-line': 157,
        'sel-line': 173,
        'sel-line-start': 5425,
        'selection_end': 5469,
        'selection_start': 5467},
                       loc('etc/gui/fonts/otf2bdf3/maps/windows.1251'): {'at'\
        'trib-starts': [],
        'first-line': 158,
        'sel-line': 174,
        'sel-line-start': 5456,
        'selection_end': 5500,
        'selection_start': 5498},
                       loc('etc/gui/geometry.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/help.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/help/Help Close Contacts.htm'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 19,
        'sel-line-start': 848,
        'selection_end': 909,
        'selection_start': 848},
                       loc('etc/gui/help/Help Edit Atoms.htm'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 196,
        'selection_end': 202,
        'selection_start': 202},
                       loc('etc/gui/help/Help Model Disorder.htm'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 197,
        'selection_end': 214,
        'selection_start': 214},
                       loc('etc/gui/help/Help-Close-Contacts.htm'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 276,
        'selection_end': 373,
        'selection_start': 365},
                       loc('etc/gui/help/Help-Edit-Atoms.htm'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 264,
        'selection_end': 361,
        'selection_start': 353},
                       loc('etc/gui/help/Help-Model-Disorder.htm'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 245,
        'selection_end': 342,
        'selection_start': 334},
                       loc('etc/gui/history.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 214,
        'selection_end': 263,
        'selection_start': 214},
                       loc('etc/gui/hydrogen-atoms.htm'): {'attrib-starts': [],
        'first-line': 55,
        'sel-line': 100,
        'sel-line-start': 2961,
        'selection_end': 2975,
        'selection_start': 2975},
                       loc('etc/gui/images.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 45,
        'sel-line-start': 1523,
        'selection_end': 1597,
        'selection_start': 1597},
                       loc('etc/gui/images/bar_large.gif'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 737,
        'selection_end': 1183,
        'selection_start': 1183},
                       loc('etc/gui/index-info.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 52,
        'selection_start': 41},
                       loc('etc/gui/index-tools.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 53,
        'selection_start': 42},
                       loc('etc/gui/index-view.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 52,
        'selection_start': 41},
                       loc('etc/gui/index-work.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 52,
        'selection_start': 41},
                       loc('etc/gui/main-toolbar.htm'): {'attrib-starts': [],
        'first-line': 72,
        'sel-line': 100,
        'sel-line-start': 3150,
        'selection_end': 3150,
        'selection_start': 3150},
                       loc('etc/gui/metadata-h3-crystal.htm'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/metadata.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 12,
        'sel-line-start': 415,
        'selection_end': 457,
        'selection_start': 457},
                       loc('etc/gui/model.htm'): {'attrib-starts': [],
        'first-line': 43,
        'sel-line': 60,
        'sel-line-start': 1764,
        'selection_end': 1767,
        'selection_start': 1767},
                       loc('etc/gui/naming.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 275,
        'selection_end': 300,
        'selection_start': 300},
                       loc('etc/gui/overlay.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/q-peaks.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 86,
        'selection_end': 325,
        'selection_start': 86},
                       loc('etc/gui/quick-drawing-styles.htm'): {'attrib-sta'\
        'rts': [],
        'first-line': 43,
        'sel-line': 56,
        'sel-line-start': 1571,
        'selection_end': 1695,
        'selection_start': 1686},
                       loc('etc/gui/recent-files.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 382,
        'selection_end': 390,
        'selection_start': 390},
                       loc('etc/gui/refine.htm'): {'attrib-starts': [],
        'first-line': 12,
        'sel-line': 24,
        'sel-line-start': 606,
        'selection_end': 606,
        'selection_start': 606},
                       loc('etc/gui/refinement-indicators.htm'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 384,
        'selection_end': 384,
        'selection_start': 384},
                       loc('etc/gui/refinement-restraints.htm'): {'attrib-st'\
        'arts': [],
        'first-line': 69,
        'sel-line': 110,
        'sel-line-start': 3251,
        'selection_end': 3251,
        'selection_start': 3251},
                       loc('etc/gui/refinement-settings-h3-autotidy-settings.htm'): {''\
        'attrib-starts': [],
        'first-line': 43,
        'sel-line': 20,
        'sel-line-start': 626,
        'selection_end': 632,
        'selection_start': 632},
                       loc('etc/gui/refinement-settings-h3-autotidy.htm'): {''\
        'attrib-starts': [],
        'first-line': 7,
        'sel-line': 64,
        'sel-line-start': 2178,
        'selection_end': 2272,
        'selection_start': 2272},
                       loc('etc/gui/refinement-settings-only.htm'): {'attrib'\
        '-starts': [],
        'first-line': 117,
        'sel-line': 175,
        'sel-line-start': 5345,
        'selection_end': 5536,
        'selection_start': 5536},
                       loc('etc/gui/refinement-settings.htm'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 72,
        'selection_end': 93,
        'selection_start': 77},
                       loc('etc/gui/refinement.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 48,
        'sel-line-start': 1728,
        'selection_end': 1728,
        'selection_start': 1728},
                       loc('etc/gui/report-settings-h3-image.htm'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 26,
        'sel-line-start': 817,
        'selection_end': 835,
        'selection_start': 835},
                       loc('etc/gui/report-settings-only.htm'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/rotate.htm'): {'attrib-starts': [],
        'first-line': 24,
        'sel-line': 34,
        'sel-line-start': 712,
        'selection_end': 900,
        'selection_start': 712},
                       loc('etc/gui/select.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 392,
        'selection_end': 431,
        'selection_start': 431},
                       loc('etc/gui/settings.htm'): {'attrib-starts': [],
        'first-line': 73,
        'sel-line': 82,
        'sel-line-start': 2693,
        'selection_end': 2727,
        'selection_start': 2727},
                       loc('etc/gui/show.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 31,
        'sel-line-start': 745,
        'selection_end': 745,
        'selection_start': 745},
                       loc('etc/gui/snippets/snippet-close-contacts.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 51,
        'selection_end': 257,
        'selection_start': 51},
                       loc('etc/gui/snippets/snippet-editatom.htm'): {'attri'\
        'b-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 276,
        'selection_end': 281,
        'selection_start': 281},
                       loc('etc/gui/snippets/snippet-model-disorder.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 326,
        'selection_end': 372,
        'selection_start': 372},
                       loc('etc/gui/solution-settings-only.htm'): {'attrib-s'\
        'tarts': [],
        'first-line': 102,
        'sel-line': 111,
        'sel-line-start': 3158,
        'selection_end': 3159,
        'selection_start': 3159},
                       loc('etc/gui/solve.htm'): {'attrib-starts': [],
        'first-line': 3,
        'sel-line': 39,
        'sel-line-start': 1019,
        'selection_end': 1108,
        'selection_start': 1108},
                       loc('etc/gui/space-groups.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 72,
        'selection_end': 105,
        'selection_start': 105},
                       loc('etc/gui/start.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 214,
        'selection_end': 275,
        'selection_start': 214},
                       loc('etc/gui/stoe.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 33,
        'sel-line-start': 812,
        'selection_end': 838,
        'selection_start': 838},
                       loc('etc/gui/symmetry-generation.htm'): {'attrib-star'\
        'ts': [],
        'first-line': 14,
        'sel-line': 56,
        'sel-line-start': 3377,
        'selection_end': 3389,
        'selection_start': 3378},
                       loc('etc/gui/tabs.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 2,
        'selection_end': 53,
        'selection_start': 2},
                       loc('etc/gui/toolbox-work.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 19,
        'sel-line-start': 532,
        'selection_end': 560,
        'selection_start': 560},
                       loc('etc/gui/tools.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/gui/twinning.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 189,
        'selection_end': 229,
        'selection_start': 229},
                       loc('etc/index.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 227,
        'selection_end': 274,
        'selection_start': 227},
                       loc('etc/news/content.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 20,
        'sel-line-start': 407,
        'selection_end': 451,
        'selection_start': 451},
                       loc('etc/news/news.htm'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 116,
        'selection_end': 175,
        'selection_start': 122},
                       loc('etc/news/news.png'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/news/space-group-determination.htm'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 69,
        'selection_end': 412,
        'selection_start': 71},
                       loc('etc/tutorials/03srv164/03srv164-01.htm'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 352,
        'selection_end': 362,
        'selection_start': 357},
                       loc('etc/tutorials/03srv164/03srv164-02.htm'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/03srv164/index.htm'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'sel-line': 21,
        'sel-line-start': 658,
        'selection_end': 704,
        'selection_start': 692},
                       loc('etc/tutorials/Functions in Olex/Functions in Olex-01.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/Functions in Olex-02.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 404,
        'selection_end': 414,
        'selection_start': 409},
                       loc('etc/tutorials/Functions in Olex/Functions in Olex-05.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/Functions in Olex-06.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/Functions in Olex-07.htm'): {''\
        'attrib-starts': [],
        'first-line': 53,
        'sel-line': 67,
        'sel-line-start': 3494,
        'selection_end': 3519,
        'selection_start': 3511},
                       loc('etc/tutorials/Functions in Olex/Geometry-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/Quick-Drawing-Styles-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/Rotate-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 9,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/Select-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 144,
        'selection_end': 196,
        'selection_start': 147},
                       loc('etc/tutorials/Functions in Olex/Show-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 68,
        'sel-line': 88,
        'sel-line-start': 2325,
        'selection_end': 2351,
        'selection_start': 2337},
                       loc('etc/tutorials/Functions in Olex/Skins-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/Functions in Olex/symmetry-generation-on.htm'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/sucrose/03srv164-01.htm'): {'attri'\
        'b-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 30,
        'selection_end': 30,
        'selection_start': 30},
                       loc('etc/tutorials/sucrose/index.htm'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 22,
        'sel-line-start': 648,
        'selection_end': 694,
        'selection_start': 682},
                       loc('etc/tutorials/sucrose/sucrose-02.htm'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('etc/tutorials/tutorials.htm'): {'attrib-starts': [],
        'first-line': 1,
        'sel-line': 25,
        'sel-line-start': 826,
        'selection_end': 856,
        'selection_start': 826},
                       loc('initpy.py'): {'attrib-starts': [('Writer',
        8),
        ('Writer.write',
         9)],
        'first-line': 43,
        'sel-line': 66,
        'sel-line-start': 1897,
        'selection_end': 1907,
        'selection_start': 1907},
                       loc('last.osp'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 416,
        'selection_end': 452,
        'selection_start': 452},
                       loc('log.dat'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('macro.xld'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 18,
        'sel-line-start': 608,
        'selection_end': 618,
        'selection_start': 618},
                       loc('olx.py'): {'attrib-starts': [('Anis',
        472)],
                                       'first-line': 1094,
                                       'sel-line': 474,
                                       'sel-line-start': 8351,
                                       'selection_end': 8369,
                                       'selection_start': 8369},
                       loc('output.txt'): {'attrib-starts': [],
        'first-line': 60,
        'sel-line': 82,
        'sel-line-start': 4049,
        'selection_end': 4054,
        'selection_start': 4049},
                       loc('plugins.xld'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 199,
        'selection_end': 213,
        'selection_start': 213},
                       loc('pys.py'): {'attrib-starts': [('Writer',
        6),
        ('Writer.write',
         7)],
                                       'first-line': 0,
                                       'sel-line': 14,
                                       'sel-line-start': 142,
                                       'selection_end': 142,
                                       'selection_start': 142},
                       loc('sample_data/sucrose/sucrose.ins'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 15,
        'sel-line-start': 258,
        'selection_end': 271,
        'selection_start': 271},
                       loc('settings.xld'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 18,
        'sel-line-start': 893,
        'selection_end': 912,
        'selection_start': 912},
                       loc('spy.py'): {'attrib-starts': [('Spy',
        29),
        ('Spy.run',
         34)],
                                       'first-line': 0,
                                       'sel-line': 35,
                                       'sel-line-start': 813,
                                       'selection_end': 813,
                                       'selection_start': 813},
                       loc('util/AsLib/auto_solution_engine/Util/FileSystem.py'): {''\
        'attrib-starts': [('test_Directory_chdir',
                           751)],
        'first-line': 746,
        'sel-line': 760,
        'sel-line-start': 21236,
        'selection_end': 21270,
        'selection_start': 21263},
                       loc('util/BAT/refineR.bat'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 84,
        'selection_end': 84,
        'selection_start': 84},
                       loc('util/DIMAS/DIMAS DATA MAINTANANCE/FileSystem.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 151,
        'selection_end': 165,
        'selection_start': 165},
                       loc('util/DIMAS/OlexGui/dl_box.py'): {'attrib-starts': [(''\
        'submitter_chooser',
        123)],
        'first-line': 110,
        'sel-line': 124,
        'sel-line-start': 3955,
        'selection_end': 3973,
        'selection_start': 3964},
                       loc('util/DIMAS/OlexGui/insert_help.py'): {'attrib-st'\
        'arts': [('do_glossary',
                  11)],
        'first-line': 39,
        'sel-line': 55,
        'sel-line-start': 1334,
        'selection_end': 1392,
        'selection_start': 1392},
                       loc('util/DIMAS/OlexGui/list_table_items.py'): {'attr'\
        'ib-starts': [],
        'first-line': 83,
        'sel-line': 107,
        'sel-line-start': 3624,
        'selection_end': 3635,
        'selection_start': 3635},
                       loc('util/DIMAS/OlexGui/pull_numbers.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 0,
        'sel-line': 46,
        'sel-line-start': 1300,
        'selection_end': 1300,
        'selection_start': 1300},
                       loc('util/DIMAS/OlexGui/rs_ext.py'): {'attrib-starts': [(''\
        'reg_glossary',
        12)],
        'first-line': 0,
        'sel-line': 27,
        'sel-line-start': 802,
        'selection_end': 802,
        'selection_start': 802},
                       loc('util/DIMAS/OlexGui/sql_commands_t.sql'): {'attri'\
        'b-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/DIMAS/Portal/dl_box.py'): {'attrib-starts': [(''\
        'getSpecialFields',
        328)],
        'first-line': 443,
        'sel-line': 467,
        'sel-line-start': 17646,
        'selection_end': 17671,
        'selection_start': 17671},
                       loc('util/DIMAS/Portal/marvin_tem.pt'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 18,
        'sel-line-start': 516,
        'selection_end': 526,
        'selection_start': 526},
                       loc('util/DIMAS/dimas_plone/dl_box.py'): {'attrib-sta'\
        'rts': [('get_translate_dict',
                 36)],
        'first-line': 53,
        'sel-line': 64,
        'sel-line-start': 2264,
        'selection_end': 2306,
        'selection_start': 2306},
                       loc('util/DIMAS/dl_box.py'): {'attrib-starts': [('get'\
        'SpecialFields',
        328)],
        'first-line': 394,
        'sel-line': 408,
        'sel-line-start': 15174,
        'selection_end': 15222,
        'selection_start': 15222},
                       loc('util/DIMAS/olex_submission.sql'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'sel-line': 32,
        'sel-line-start': 1321,
        'selection_end': 1324,
        'selection_start': 1324},
                       loc('util/DIMAS/olex_submission_test.sql'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/DIMAS/submission_report.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/SiteSpecific/1K.cif'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/SiteSpecific/6K.cif'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/SiteSpecific/apex.cif'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 422,
        'selection_end': 457,
        'selection_start': 457},
                       loc('util/pyUtil/AsLib/auto_solution_engine/AtomicDisplacement.py'): {''\
        'attrib-starts': [('AtomicDisplacementTensor',
                           234),
                          ('AtomicDisplacementTensor.mean_square_displacemen'\
                           't',
                           328)],
        'first-line': 0,
        'sel-line': 332,
        'sel-line-start': 10225,
        'selection_end': 10232,
        'selection_start': 10227},
                       loc('util/pyUtil/AsLib/auto_solution_engine/ChemicalCompoundVisitors.py'): {''\
        'attrib-starts': [('BreadthFirstVisitor',
                           104),
                          ('BreadthFirstVisitor.__init__',
                           115)],
        'first-line': 0,
        'sel-line': 117,
        'sel-line-start': 3360,
        'selection_end': 3367,
        'selection_start': 3362},
                       loc('util/pyUtil/AsLib/auto_solution_engine/GroupTheory.py'): {''\
        'attrib-starts': [('Permutation',
                           62),
                          ('Permutation.__eq__',
                           93)],
        'first-line': 146,
        'sel-line': 160,
        'sel-line-start': 4273,
        'selection_end': 4280,
        'selection_start': 4275},
                       loc('util/pyUtil/AsLib/auto_solution_engine/OVModel.py'): {''\
        'attrib-starts': [('OldOlexViewedModel',
                           22),
                          ('OldOlexViewedModel.refinement_olex',
                           317)],
        'first-line': 314,
        'sel-line': 332,
        'sel-line-start': 10711,
        'selection_end': 10750,
        'selection_start': 10738},
                       loc('util/pyUtil/AsLib/auto_solution_engine/OlexViewedModel.py'): {''\
        'attrib-starts': [('OlexViewedModel',
                           8),
                          ('OlexViewedModel.solution_olex',
                           250)],
        'first-line': 215,
        'sel-line': 301,
        'sel-line-start': 9837,
        'selection_end': 9857,
        'selection_start': 9857},
                       loc('util/pyUtil/AsLib/auto_solution_engine/Util/FileSystem.py'): {''\
        'attrib-starts': [('Path',
                           46),
                          ('Path.match',
                           194)],
        'first-line': 182,
        'sel-line': 195,
        'sel-line-start': 4963,
        'selection_end': 5005,
        'selection_start': 5000},
                       loc('util/pyUtil/AsLib/auto_solution_engine/Util/MoreNumeric.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 7,
        'sel-line-start': 88,
        'selection_end': 88,
        'selection_start': 88},
                       loc('util/pyUtil/CctbxLib/_auto_chem.py'): {'attrib-s'\
        'tarts': [('OlexSetupRefineCctbxAuto',
                   84),
                  ('OlexSetupRefineCctbxAuto.post_peaks',
                   112)],
        'first-line': 115,
        'sel-line': 127,
        'sel-line-start': 3806,
        'selection_end': 3831,
        'selection_start': 3821},
                       loc('util/pyUtil/CctbxLib/_cctbx_auto_chem.py'): {'at'\
        'trib-starts': [('OlexSetupRefineCctbxAuto',
                         7),
                        ('OlexSetupRefineCctbxAuto.post_peaks',
                         14)],
        'first-line': 13,
        'sel-line': 25,
        'sel-line-start': 751,
        'selection_end': 776,
        'selection_start': 766},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/boost_adaptbx/boost/python.py'): {''\
        'attrib-starts': [('import_ext',
                           11)],
        'first-line': 11,
        'sel-line': 23,
        'sel-line-start': 776,
        'selection_end': 776,
        'selection_start': 776},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/cctbx/cctbx/crystal/__init__.py'): {''\
        'attrib-starts': [('symmetry',
                           29),
                          ('symmetry.unit_cell',
                           69)],
        'first-line': 47,
        'sel-line': 70,
        'sel-line-start': 2676,
        'selection_end': 2676,
        'selection_start': 2676},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/cctbx/cctbx/maptbx/__init__.py'): {''\
        'attrib-starts': [('crystal_gridding',
                           63),
                          ('crystal_gridding.__init__',
                           65)],
        'first-line': 68,
        'sel-line': 88,
        'sel-line-start': 3083,
        'selection_end': 3083,
        'selection_start': 3083},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/cctbx/cctbx/miller.py'): {''\
        'attrib-starts': [('array',
                           1071),
                          ('array.fft_map',
                           2318)],
        'first-line': 2311,
        'sel-line': 2334,
        'sel-line-start': 86267,
        'selection_end': 86267,
        'selection_start': 86267},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/cctbx/cctbx/xray/minimization.py'): {''\
        'attrib-starts': [('lbfgs',
                           53),
                          ('lbfgs.apply_shifts',
                           95)],
        'first-line': 80,
        'sel-line': 103,
        'sel-line-start': 4127,
        'selection_end': 4127,
        'selection_start': 4127},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/cctbx/cctbx/xray/structure_factors/manager.py'): {''\
        'attrib-starts': [('managed_calculation_base',
                           226),
                          ('managed_calculation_base.__init__',
                           228)],
        'first-line': 209,
        'sel-line': 232,
        'sel-line-start': 7865,
        'selection_end': 7865,
        'selection_start': 7865},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/crys3d/wx_map_viewer.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 33,
        'selection_end': 33,
        'selection_start': 33},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/iotbx/iotbx/command_line/reflection_statistics.py'): {''\
        'attrib-starts': [('array_cache',
                           33),
                          ('array_cache.possible_twin_laws',
                           93)],
        'first-line': 90,
        'sel-line': 114,
        'sel-line-start': 4433,
        'selection_end': 4433,
        'selection_start': 4433},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/iotbx/iotbx/detectors/bruker.py'): {''\
        'attrib-starts': [('BrukerImage',
                           4),
                          ('BrukerImage.readHeader',
                           13)],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 394,
        'selection_end': 409,
        'selection_start': 409},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/iotbx/iotbx/mtz/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 190,
        'selection_end': 190,
        'selection_start': 190},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/iotbx/iotbx/mtz/extract_from_symop_lib.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 63,
        'selection_end': 88,
        'selection_start': 88},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/iotbx/iotbx/pdb/hierarchy_v2.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 58,
        'selection_end': 119,
        'selection_start': 58},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/iotbx/iotbx/reflection_file_reader.py'): {''\
        'attrib-starts': [('any_reflection_file',
                           19),
                          ('any_reflection_file.__init__',
                           21)],
        'first-line': 35,
        'sel-line': 55,
        'sel-line-start': 2196,
        'selection_end': 2196,
        'selection_start': 2196},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/configure.py'): {''\
        'attrib-starts': [('run',
                           2)],
        'first-line': 0,
        'sel-line': 20,
        'sel-line-start': 543,
        'selection_end': 543,
        'selection_start': 543},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/__init__.py'): {''\
        'attrib-starts': [('adopt_init_args',
                           21)],
        'first-line': 0,
        'sel-line': 22,
        'sel-line-start': 480,
        'selection_end': 480,
        'selection_start': 480},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/command_line/configure.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 62,
        'selection_end': 98,
        'selection_start': 64},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/config.py'): {''\
        'attrib-starts': [('environment',
                           225),
                          ('environment.__init__',
                           227)],
        'first-line': 223,
        'sel-line': 247,
        'sel-line-start': 8070,
        'selection_end': 8070,
        'selection_start': 8070},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/load_env.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 73,
        'selection_end': 73,
        'selection_start': 73},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/math_utils.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/object_oriented_patterns.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 47,
        'selection_end': 47,
        'selection_start': 47},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/smtbx/ab_initio/charge_flipping.py'): {''\
        'attrib-starts': [('loop',
                           399)],
        'first-line': 409,
        'sel-line': 422,
        'sel-line-start': 15311,
        'selection_end': 15311,
        'selection_start': 15311},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/smtbx/ab_initio/examples/solve_shelx.py'): {''\
        'attrib-starts': [('run',
                           9)],
        'first-line': 0,
        'sel-line': 53,
        'sel-line-start': 1724,
        'selection_end': 1767,
        'selection_start': 1756},
                       loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/smtbx/ab_initio/tests/tst_charge_flipping.py'): {''\
        'attrib-starts': [('randomly_exercise',
                           94)],
        'first-line': 197,
        'sel-line': 212,
        'sel-line-start': 7425,
        'selection_end': 7462,
        'selection_start': 7427},
                       loc('util/pyUtil/CctbxLib/cctbx_controller.py'): {'at'\
        'trib-starts': [('refinement',
                         41),
                        ('refinement.start_cctbx_refinement',
                         146)],
        'first-line': 140,
        'sel-line': 158,
        'sel-line-start': 4909,
        'selection_end': 4943,
        'selection_start': 4943},
                       loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'): {''\
        'attrib-starts': [('OlexCctbxAdapter',
                           34),
                          ('OlexCctbxAdapter.post_single_peak',
                           393)],
        'first-line': 377,
        'sel-line': 398,
        'sel-line-start': 14269,
        'selection_end': 14305,
        'selection_start': 14275},
                       loc('util/pyUtil/CctbxLib/my_refine_util.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/Copy of olexex.py'): {'attrib-starts': [(''\
        'OlexAtoms',
        7),
        ('OlexAtoms.__init__',
         8),
        ('OlexAtoms.__init__.iterator',
         10)],
        'first-line': 15,
        'sel-line': 28,
        'sel-line-start': 697,
        'selection_end': 719,
        'selection_start': 698},
                       loc('util/pyUtil/PluginLib/plugin-AutoChem/AutoChem.py'): {''\
        'attrib-starts': [('RunBatchStructures',
                           18),
                          ('RunBatchStructures.__init__',
                           19)],
        'first-line': 1,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 462,
        'selection_end': 464,
        'selection_start': 464},
                       loc('util/pyUtil/PluginLib/plugin-AutoChem/plugin_autochem_exex.py'): {''\
        'attrib-starts': [('RBS',
                           16),
                          ('RBS.ac_run_solution_step',
                           157)],
        'first-line': 143,
        'sel-line': 160,
        'sel-line-start': 4899,
        'selection_end': 4903,
        'selection_start': 4903},
                       loc('util/pyUtil/PluginLib/plugin-Dimas/UpdateDimasDB.py'): {''\
        'attrib-starts': [('UpdateDimasDB',
                           18),
                          ('UpdateDimasDB.upload_file',
                           190)],
        'first-line': 189,
        'sel-line': 207,
        'sel-line-start': 6817,
        'selection_end': 6838,
        'selection_start': 6834},
                       loc('util/pyUtil/PluginLib/plugin-Dimas/autoUpdateDimasDB.py'): {''\
        'attrib-starts': [('AutoUpdateDimasDB',
                           29),
                          ('AutoUpdateDimasDB.uploadFiles',
                           254)],
        'first-line': 255,
        'sel-line': 273,
        'sel-line-start': 11013,
        'selection_end': 11040,
        'selection_start': 11036},
                       loc('util/pyUtil/PluginLib/plugin-HotshotProfiler/spy_HotshotProfiler.py'): {''\
        'attrib-starts': [],
        'first-line': 7,
        'sel-line': 19,
        'sel-line-start': 453,
        'selection_end': 453,
        'selection_start': 453},
                       loc('util/pyUtil/PluginLib/plugin-MySQL/DBConn.py'): {''\
        'attrib-starts': [('OlexGuiDBConn',
                           17),
                          ('OlexGuiDBConn.initialise',
                           21)],
        'first-line': 0,
        'sel-line': 25,
        'sel-line-start': 748,
        'selection_end': 764,
        'selection_start': 764},
                       loc('util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py'): {''\
        'attrib-starts': [('DownloadOlexLanguageDictionary',
                           234),
                          ('DownloadOlexLanguageDictionary.write_dict_file',
                           378)],
        'first-line': 354,
        'sel-line': 379,
        'sel-line-start': 12761,
        'selection_end': 12761,
        'selection_start': 12761},
                       loc('util/pyUtil/PluginLib/plugin-MySQL/SQLFactory.py'): {''\
        'attrib-starts': [('SQLFactory',
                           21),
                          ('SQLFactory.run_sql',
                           45)],
        'first-line': 35,
        'sel-line': 48,
        'sel-line-start': 1288,
        'selection_end': 1288,
        'selection_start': 1288},
                       loc('util/pyUtil/PluginLib/plugin_batch_exex.py'): {''\
        'attrib-starts': [('BatchMatch',
                           10)],
        'first-line': 14,
        'sel-line': 28,
        'sel-line-start': 857,
        'selection_end': 910,
        'selection_start': 900},
                       loc('util/pyUtil/PluginLib/skins/plugin-BNSkin/PilTools_BN.py'): {''\
        'attrib-starts': [('setGuiColours',
                           9)],
        'first-line': 0,
        'sel-line': 124,
        'sel-line-start': 4501,
        'selection_end': 4556,
        'selection_start': 4546},
                       loc('util/pyUtil/PluginLib/skins/plugin-ODSkin/PilTools_OD.py'): {''\
        'attrib-starts': [],
        'first-line': 144,
        'sel-line': 255,
        'sel-line-start': 10087,
        'selection_end': 10109,
        'selection_start': 10109},
                       loc('util/pyUtil/PluginLib/skins/plugin-ODSkin/timage_OD.py'): {''\
        'attrib-starts': [],
        'first-line': 65,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/PluginLib/skins/plugin-STOESkin/PilTools_STOE.py'): {''\
        'attrib-starts': [('setGuiColours',
                           9)],
        'first-line': 10,
        'sel-line': 40,
        'sel-line-start': 1560,
        'selection_end': 1586,
        'selection_start': 1586},
                       loc('util/pyUtil/PluginLib/skins/plugin_STOESkin/PilTools_STOE.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/PyToolLib/Analysis.py'): {'attrib-st'\
        'arts': [('XYPlot',
                  320),
                 ('XYPlot.XYChargeFlippingHtm',
                  377)],
        'first-line': 371,
        'sel-line': 382,
        'sel-line-start': 11556,
        'selection_end': 11556,
        'selection_start': 11556},
                       loc('util/pyUtil/PyToolLib/ArgumentParser.py'): {'att'\
        'rib-starts': [('ArgumentParser',
                        18),
                       ('ArgumentParser.setVariables',
                        50)],
        'first-line': 40,
        'sel-line': 52,
        'sel-line-start': 1568,
        'selection_end': 1604,
        'selection_start': 1596},
                       loc('util/pyUtil/PyToolLib/AutoStructure.py'): {'attr'\
        'ib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 11,
        'selection_end': 88,
        'selection_start': 82},
                       loc('util/pyUtil/PyToolLib/BrukerSaint.py'): {'attrib'\
        '-starts': [('BrukerSaint',
                     52),
                    ('BrukerSaint.make_gui_saint_cmd',
                     769)],
        'first-line': 813,
        'sel-line': 822,
        'sel-line-start': 30517,
        'selection_end': 30605,
        'selection_start': 30592},
                       loc('util/pyUtil/PyToolLib/CifInfo.py'): {'attrib-sta'\
        'rts': [('MetaCif',
                 50),
                ('MetaCif.run',
                 75)],
        'first-line': 66,
        'sel-line': 85,
        'sel-line-start': 2298,
        'selection_end': 2324,
        'selection_start': 2311},
                       loc('util/pyUtil/PyToolLib/CsvImporter.py'): {'attrib'\
        '-starts': [('CsvImporter',
                     3),
                    ('CsvImporter.import_from_csv',
                     26)],
        'first-line': 0,
        'sel-line': 26,
        'sel-line-start': 616,
        'selection_end': 636,
        'selection_start': 621},
                       loc('util/pyUtil/PyToolLib/DBConn.py'): {'attrib-star'\
        'ts': [('ChemDBConn',
                3),
               ('ChemDBConn.initialise',
                7)],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 291,
        'selection_end': 314,
        'selection_start': 314},
                       loc('util/pyUtil/PyToolLib/DimasInfo.py'): {'attrib-s'\
        'tarts': [('dimas_info',
                   319),
                  ('dimas_info.uploadFiles',
                   693)],
        'first-line': 716,
        'sel-line': 727,
        'sel-line-start': 21822,
        'selection_end': 21859,
        'selection_start': 21828},
                       loc('util/pyUtil/PyToolLib/ExternalPrgParameters.py'): {''\
        'attrib-starts': [('DefineExternalPrgParameters',
                           2),
                          ('DefineExternalPrgParameters.run',
                           6)],
        'first-line': 138,
        'sel-line': 157,
        'sel-line-start': 4859,
        'selection_end': 4882,
        'selection_start': 4882},
                       loc('util/pyUtil/PyToolLib/FileSystem.py'): {'attrib-'\
        'starts': [],
        'first-line': 2,
        'sel-line': 19,
        'sel-line-start': 253,
        'selection_end': 253,
        'selection_start': 253},
                       loc('util/pyUtil/PyToolLib/FileUploader.py'): {'attri'\
        'b-starts': [('FileUploader',
                      10),
                     ('FileUploader.create_cif_dictionary',
                      144)],
        'first-line': 152,
        'sel-line': 156,
        'sel-line-start': 4740,
        'selection_end': 4749,
        'selection_start': 4749},
                       loc('util/pyUtil/PyToolLib/FontInstances.py'): {'attr'\
        'ib-starts': [('FontInstances',
                       7),
                      ('FontInstances.defineFonts',
                       37)],
        'first-line': 0,
        'sel-line': 244,
        'sel-line-start': 6662,
        'selection_end': 6662,
        'selection_start': 6662},
                       loc('util/pyUtil/PyToolLib/GuiFunctions.py'): {'attri'\
        'b-starts': [('GuiFunctions',
                      7),
                     ('GuiFunctions.__init__',
                      8)],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 237,
        'selection_end': 265,
        'selection_start': 265},
                       loc('util/pyUtil/PyToolLib/GuiTools.py'): {'attrib-st'\
        'arts': [('MakeGuiTools',
                  22),
                 ('MakeGuiTools.gui_def_solve',
                  785)],
        'first-line': 924,
        'sel-line': 936,
        'sel-line-start': 26950,
        'selection_end': 27008,
        'selection_start': 27000},
                       loc('util/pyUtil/PyToolLib/History.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 12,
        'sel-line': 22,
        'sel-line-start': 377,
        'selection_end': 400,
        'selection_start': 400},
                       loc('util/pyUtil/PyToolLib/ImageTools.py'): {'attrib-'\
        'starts': [('ImageTools',
                    12),
                   ('ImageTools.colourize',
                    175)],
        'first-line': 162,
        'sel-line': 178,
        'sel-line-start': 7000,
        'selection_end': 7004,
        'selection_start': 7004},
                       loc('util/pyUtil/PyToolLib/ImateTools.py'): {'attrib-'\
        'starts': [('ImageTools',
                    8),
                   ('ImageTools.getOlexVariables',
                    16)],
        'first-line': 4,
        'sel-line': 17,
        'sel-line-start': 405,
        'selection_end': 426,
        'selection_start': 409},
                       loc('util/pyUtil/PyToolLib/MakeMovie.py'): {'attrib-s'\
        'tarts': [('MakeMovie',
                   5),
                  ('MakeMovie.run',
                   20)],
        'first-line': 11,
        'sel-line': 28,
        'sel-line-start': 870,
        'selection_end': 882,
        'selection_start': 878},
                       loc('util/pyUtil/PyToolLib/OOPatterns.py'): {'attrib-'\
        'starts': [],
        'first-line': 61,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/PyToolLib/OVModel.py'): {'attrib-sta'\
        'rts': [('OVModel',
                 9),
                ('OVModel.on_sub_cycle_finished',
                 21)],
        'first-line': 15,
        'sel-line': 29,
        'sel-line-start': 889,
        'selection_end': 917,
        'selection_start': 907},
                       loc('util/pyUtil/PyToolLib/OlexFunctionRegistration.py'): {''\
        'attrib-starts': [('OlexFunctionRegisration',
                           0),
                          ('OlexFunctionRegisration.__init__',
                           1)],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 112,
        'selection_end': 135,
        'selection_start': 116},
                       loc('util/pyUtil/PyToolLib/OlexHelpToMySQL.py'): {'at'\
        'trib-starts': [('ExportHelp',
                         5),
                        ('ExportHelp.run',
                         10)],
        'first-line': 10,
        'sel-line': 18,
        'sel-line-start': 478,
        'selection_end': 478,
        'selection_start': 478},
                       loc('util/pyUtil/PyToolLib/OlexVFS.py'): {'attrib-sta'\
        'rts': [('ImageWriter',
                 2)],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 13,
        'selection_end': 24,
        'selection_start': 13},
                       loc('util/pyUtil/PyToolLib/PeriodicTable.py'): {'attr'\
        'ib-starts': [('PeriodicTable',
                       1),
                      ('PeriodicTable.PeriodicTable',
                       4)],
        'first-line': 0,
        'sel-line': 20,
        'sel-line-start': 521,
        'selection_end': 553,
        'selection_start': 553},
                       loc('util/pyUtil/PyToolLib/PilTools.py'): {'attrib-st'\
        'arts': [('timage',
                  857),
                 ('timage.__init__',
                  859)],
        'first-line': 945,
        'sel-line': 969,
        'sel-line-start': 32553,
        'selection_end': 32582,
        'selection_start': 32582},
                       loc('util/pyUtil/PyToolLib/RoundedCorners.py'): {'att'\
        'rib-starts': [('create_rounded_rectangle',
                        38)],
        'first-line': 33,
        'sel-line': 84,
        'sel-line-start': 3004,
        'selection_end': 3054,
        'selection_start': 3011},
                       loc('util/pyUtil/PyToolLib/RunPrg.py'): {'attrib-star'\
        'ts': [('RunPrg',
                20),
               ('RunPrg.__init__',
                21)],
        'first-line': 19,
        'sel-line': 31,
        'sel-line-start': 730,
        'selection_end': 801,
        'selection_start': 730},
                       loc('util/pyUtil/PyToolLib/SQLFactories.py'): {'attri'\
        'b-starts': [('SQLFactory',
                      11),
                     ('SQLFactory.write_help_file',
                      326)],
        'first-line': 273,
        'sel-line': 340,
        'sel-line-start': 10951,
        'selection_end': 10978,
        'selection_start': 10951},
                       loc('util/pyUtil/PyToolLib/SQLFactory.py'): {'attrib-'\
        'starts': [('SQLFactory',
                    21),
                   ('SQLFactory.run_sql',
                    40)],
        'first-line': 37,
        'sel-line': 46,
        'sel-line-start': 1239,
        'selection_end': 1239,
        'selection_start': 1239},
                       loc('util/pyUtil/PyToolLib/Tutorials.py'): {'attrib-s'\
        'tarts': [('Tutorials',
                   8),
                  ('Tutorials.Introduction',
                   21)],
        'first-line': 14,
        'sel-line': 25,
        'sel-line-start': 651,
        'selection_end': 663,
        'selection_start': 659},
                       loc('util/pyUtil/PyToolLib/UpdateDimasDB.py'): {'attr'\
        'ib-starts': [('UpdateDimasDB',
                       16),
                      ('UpdateDimasDB.insert_diffraction_cell_data',
                       169)],
        'first-line': 150,
        'sel-line': 173,
        'sel-line-start': 5394,
        'selection_end': 5394,
        'selection_start': 5394},
                       loc('util/pyUtil/PyToolLib/__init__.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 1,
        'selection_end': 1,
        'selection_start': 1},
                       loc('util/pyUtil/PyToolLib/pyTools.py'): {'attrib-sta'\
        'rts': [('pyTools',
                 7),
                ('pyTools.get_tool',
                 47)],
        'first-line': 139,
        'sel-line': 164,
        'sel-line-start': 4814,
        'selection_end': 4814,
        'selection_start': 4814},
                       loc('util/pyUtil/PyToolLib/structure_dir_clean.py'): {''\
        'attrib-starts': [],
        'first-line': 4,
        'sel-line': 16,
        'sel-line-start': 420,
        'selection_end': 435,
        'selection_start': 433},
                       loc('util/pyUtil/PythonLib/MySQLdb/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0,
        'sel-line': 14,
        'sel-line-start': 358,
        'selection_end': 358,
        'selection_start': 358},
                       loc('util/pyUtil/PythonLib/MySQLdb/connections.py'): {''\
        'attrib-starts': [('Connection',
                           37),
                          ('Connection.__init__',
                           43)],
        'first-line': 109,
        'sel-line': 129,
        'sel-line-start': 3928,
        'selection_end': 3928,
        'selection_start': 3928},
                       loc('util/pyUtil/PythonLib/PIL/Image.py'): {'attrib-s'\
        'tarts': [('Image',
                   433),
                  ('Image.paste',
                   1031)],
        'first-line': 1047,
        'sel-line': 1073,
        'sel-line-start': 33073,
        'selection_end': 33073,
        'selection_start': 33073},
                       loc('util/pyUtil/PythonLib/PIL/ImageColor.py'): {'att'\
        'rib-starts': [('getrgb',
                        37)],
        'first-line': 49,
        'sel-line': 89,
        'sel-line-start': 2608,
        'selection_end': 2621,
        'selection_start': 2621},
                       loc('util/pyUtil/PythonLib/PIL/ImageDraw.py'): {'attr'\
        'ib-starts': [('Draw',
                       284)],
        'first-line': 273,
        'sel-line': 288,
        'sel-line-start': 9021,
        'selection_end': 9021,
        'selection_start': 9021},
                       loc('util/pyUtil/PythonLib/PIL/ImageDraw.pyc'): {'att'\
        'rib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/PythonLib/PIL/ImageFile.py'): {'attr'\
        'ib-starts': [('StubImageFile',
                       245),
                      ('StubImageFile._open',
                       248)],
        'first-line': 237,
        'sel-line': 249,
        'sel-line-start': 7643,
        'selection_end': 7656,
        'selection_start': 7651},
                       loc('util/pyUtil/PythonLib/PIL/ImageFont.py'): {'attr'\
        'ib-starts': [('truetype',
                       201)],
        'first-line': 201,
        'sel-line': 213,
        'sel-line-start': 7270,
        'selection_end': 7337,
        'selection_start': 7329},
                       loc('util/pyUtil/PythonLib/PIL/ImageOps.py'): {'attri'\
        'b-starts': [('colorize',
                      150)],
        'first-line': 140,
        'sel-line': 152,
        'sel-line-start': 4842,
        'selection_end': 4842,
        'selection_start': 4842},
                       loc('util/pyUtil/PythonLib/PIL/PngImagePlugin.py'): {''\
        'attrib-starts': [('_save',
                           419)],
        'first-line': 489,
        'sel-line': 509,
        'sel-line-start': 14054,
        'selection_end': 14054,
        'selection_start': 14054},
                       loc('util/pyUtil/PythonLib/PIL/gifmaker.py'): {'attri'\
        'b-starts': [],
        'first-line': 12,
        'sel-line': 44,
        'sel-line-start': 1105,
        'selection_end': 1124,
        'selection_start': 1110},
                       loc('util/pyUtil/PythonLib/UserList.py'): {'attrib-st'\
        'arts': [('UserList',
                  2),
                 ('UserList.__getitem__',
                  27)],
        'first-line': 8,
        'sel-line': 27,
        'sel-line-start': 1272,
        'selection_end': 1272,
        'selection_start': 1272},
                       loc('util/pyUtil/PythonLib/anydbm.py'): {'attrib-star'\
        'ts': [('open',
                65)],
        'first-line': 0,
        'sel-line': 79,
        'sel-line-start': 2563,
        'selection_end': 2563,
        'selection_start': 2563},
                       loc('util/pyUtil/PythonLib/cctbx/difflib.py'): {'attr'\
        'ib-starts': [],
        'first-line': 13,
        'sel-line': 34,
        'sel-line-start': 1119,
        'selection_end': 1119,
        'selection_start': 1119},
                       loc('util/pyUtil/PythonLib/cctbx/heapq.py'): {'attrib'\
        '-starts': [],
        'first-line': 112,
        'sel-line': 133,
        'sel-line-start': 6443,
        'selection_end': 6443,
        'selection_start': 6443},
                       loc('util/pyUtil/PythonLib/cctbx/md5.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 171,
        'selection_end': 171,
        'selection_start': 171},
                       loc('util/pyUtil/PythonLib/encodings/aliases.py'): {''\
        'attrib-starts': [],
        'first-line': 484,
        'sel-line': 503,
        'sel-line-start': 14732,
        'selection_end': 14742,
        'selection_start': 14738},
                       loc('util/pyUtil/PythonLib/hotshot/__init__.py'): {'a'\
        'ttrib-starts': [('Profile',
                          7),
                         ('Profile.runcall',
                          67)],
        'first-line': 46,
        'sel-line': 75,
        'sel-line-start': 2533,
        'selection_end': 2533,
        'selection_start': 2533},
                       loc('util/pyUtil/PythonLib/hotshot/log.py'): {'attrib'\
        '-starts': [('LogReader',
                     23),
                    ('LogReader.__init__',
                     24)],
        'first-line': 14,
        'sel-line': 30,
        'sel-line-start': 543,
        'selection_end': 543,
        'selection_start': 543},
                       loc('util/pyUtil/PythonLib/numpy/distutils/exec_command.py'): {''\
        'attrib-starts': [('_exec_command_python',
                           320)],
        'first-line': 318,
        'sel-line': 334,
        'sel-line-start': 11629,
        'selection_end': 11654,
        'selection_start': 11646},
                       loc('util/pyUtil/PythonLib/numpy/f2py/diagnose.py'): {''\
        'attrib-starts': [('run',
                           8)],
        'first-line': 8,
        'sel-line': 22,
        'sel-line-start': 481,
        'selection_end': 500,
        'selection_start': 492},
                       loc('util/pyUtil/PythonLib/numpy/f2py/docs/TESTING.txt'): {''\
        'attrib-starts': [],
        'first-line': 52,
        'sel-line': 66,
        'sel-line-start': 1956,
        'selection_end': 2025,
        'selection_start': 2017},
                       loc('util/pyUtil/PythonLib/numpy/f2py/lib/wrapper_base.py'): {''\
        'attrib-starts': [('WrapperCCode',
                           140),
                          ('WrapperCCode.generate_pyobj_to_ctype_c',
                           166)],
        'first-line': 144,
        'sel-line': 172,
        'sel-line-start': 5896,
        'selection_end': 5909,
        'selection_start': 5904},
                       loc('util/pyUtil/PythonLib/numpy/linalg/setup.py'): {''\
        'attrib-starts': [('configuration',
                           3),
                          ('configuration.get_lapack_lite_sources',
                           12)],
        'first-line': 2,
        'sel-line': 14,
        'sel-line-start': 446,
        'selection_end': 485,
        'selection_start': 479},
                       loc('util/pyUtil/PythonLib/numpy/testing/numpytest.py'): {''\
        'attrib-starts': [('set_package_path',
                           25)],
        'first-line': 41,
        'sel-line': 55,
        'sel-line-start': 1515,
        'selection_end': 1527,
        'selection_start': 1519},
                       loc('util/pyUtil/PythonLib/pickle.py'): {'attrib-star'\
        'ts': [('Pickler',
                170),
               ('Pickler.save',
                268)],
        'first-line': 295,
        'sel-line': 316,
        'sel-line-start': 12195,
        'selection_end': 12217,
        'selection_start': 12217},
                       loc('util/pyUtil/PythonLib/pstats.py'): {'attrib-star'\
        'ts': [('Stats',
                42),
               ('Stats.print_stats',
                344)],
        'first-line': 347,
        'sel-line': 356,
        'sel-line-start': 14166,
        'selection_end': 14166,
        'selection_start': 14166},
                       loc('util/pyUtil/PythonLib/random.py'): {'attrib-star'\
        'ts': [('Random',
                68),
               ('Random.vonmisesvariate',
                399)],
        'first-line': 404,
        'sel-line': 413,
        'sel-line-start': 16203,
        'selection_end': 16234,
        'selection_start': 16226},
                       loc('util/pyUtil/PythonLib/shelve.py'): {'attrib-star'\
        'ts': [('DbfilenameShelf',
                199),
               ('DbfilenameShelf.__init__',
                206)],
        'first-line': 183,
        'sel-line': 207,
        'sel-line-start': 7016,
        'selection_end': 7016,
        'selection_start': 7016},
                       loc('util/pyUtil/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/c/refine.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 34,
        'selection_end': 34,
        'selection_start': 34},
                       loc('util/pyUtil/cctbx/cctbx_controller.py'): {'attri'\
        'b-starts': [('refinement',
                      10),
                     ('refinement.start_cctbx_refinement',
                      118)],
        'first-line': 117,
        'sel-line': 119,
        'sel-line-start': 3543,
        'selection_end': 3543,
        'selection_start': 3543},
                       loc('util/pyUtil/cctbx/cctbx_olex_adapter.py'): {'att'\
        'rib-starts': [('OlexSetupRefineCctbx',
                        30),
                       ('OlexSetupRefineCctbx.feed_olex',
                        60)],
        'first-line': 16,
        'sel-line': 68,
        'sel-line-start': 1936,
        'selection_end': 1956,
        'selection_start': 1956},
                       loc('util/pyUtil/cctbx/cctbx_refine.py'): {'attrib-st'\
        'arts': [],
        'first-line': 11,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/cctbx/cctbx_sources/cctbx/cctbx/xray/minimization.py'): {''\
        'attrib-starts': [('lbfgs',
                           53),
                          ('lbfgs.__init__',
                           55)],
        'first-line': 70,
        'sel-line': 88,
        'sel-line-start': 3605,
        'selection_end': 3605,
        'selection_start': 3605},
                       loc('util/pyUtil/cctbx/cctbx_sources/iotbx/iotbx/reflection_file_reader.py'): {''\
        'attrib-starts': [('any_reflection_file',
                           19),
                          ('any_reflection_file.__init__',
                           21)],
        'first-line': 27,
        'sel-line': 45,
        'sel-line-start': 1814,
        'selection_end': 1814,
        'selection_start': 1814},
                       loc('util/pyUtil/cctbx/cctbx_sources/scitbx/scitbx/lbfgs.py'): {''\
        'attrib-starts': [('run_c_plus_plus',
                           74)],
        'first-line': 89,
        'sel-line': 92,
        'sel-line-start': 3434,
        'selection_end': 3434,
        'selection_start': 3434},
                       loc('util/pyUtil/cctbx/my_cctbx_refinement.py'): {'at'\
        'trib-starts': [('CctbxRefine',
                         3),
                        ('CctbxRefine.build_cctbx_model',
                         44)],
        'first-line': 54,
        'sel-line': 51,
        'sel-line-start': 1382,
        'selection_end': 1382,
        'selection_start': 1382},
                       loc('util/pyUtil/cctbx/my_refine_util.py'): {'attrib-'\
        'starts': [('shake_structure',
                    54)],
        'first-line': 36,
        'sel-line': 54,
        'sel-line-start': 1787,
        'selection_end': 1787,
        'selection_start': 1787},
                       loc('util/pyUtil/cctbx/refine_util.py'): {'attrib-sta'\
        'rts': [('compare_structures',
                 31)],
        'first-line': 0,
        'sel-line': 47,
        'sel-line-start': 1652,
        'selection_end': 1694,
        'selection_start': 1687},
                       loc('util/pyUtil/hello.py'): {'attrib-starts': [('wri'\
        'te_olex',
        5),
        ('write_olex.write',
         6)],
        'first-line': 0,
        'sel-line': 9,
        'sel-line-start': 140,
        'selection_end': 150,
        'selection_start': 140},
                       loc('util/pyUtil/htmlMaker.py'): {'attrib-starts': [(''\
        'diffractionMetadataHtmlMaker',
        230)],
        'first-line': 221,
        'sel-line': 236,
        'sel-line-start': 7705,
        'selection_end': 7828,
        'selection_start': 7818},
                       loc('util/pyUtil/initpy.py'): {'attrib-starts': [('se'\
        'tup_cctbx',
        141)],
        'first-line': 188,
        'sel-line': 200,
        'sel-line-start': 6350,
        'selection_end': 6350,
        'selection_start': 6350},
                       loc('util/pyUtil/lib-2.5/my_refine_util.py'): {'attri'\
        'b-starts': [('shelx_adp_reverse_converter',
                      17),
                     ('shelx_adp_reverse_converter.u_star',
                      18)],
        'first-line': 0,
        'sel-line': 23,
        'sel-line-start': 758,
        'selection_end': 798,
        'selection_start': 770},
                       loc('util/pyUtil/lib-2.5/refine_util.py'): {'attrib-s'\
        'tarts': [('shelx_adp_reverse_converter',
                   17)],
        'first-line': 3,
        'sel-line': 17,
        'sel-line-start': 513,
        'selection_end': 513,
        'selection_start': 513},
                       loc('util/pyUtil/mgpy/example1a.py'): {'attrib-starts': [(''\
        'writeFrame',
        130)],
        'first-line': 109,
        'sel-line': 153,
        'sel-line-start': 3384,
        'selection_end': 3397,
        'selection_start': 3397},
                       loc('util/pyUtil/olexFunctions.py'): {'attrib-starts': [(''\
        'OlexFunctions',
        8),
        ('OlexFunctions.registerMacro',
         124)],
        'first-line': 112,
        'sel-line': 125,
        'sel-line-start': 3984,
        'selection_end': 4007,
        'selection_start': 3988},
                       loc('util/pyUtil/olexex.py'): {'attrib-starts': [('ma'\
        'ke_help_box',
        697)],
        'first-line': 725,
        'sel-line': 729,
        'sel-line-start': 20423,
        'selection_end': 20436,
        'selection_start': 20436},
                       loc('util/pyUtil/olexex.py_'): {'attrib-starts': [],
        'first-line': 254,
        'sel-line': 321,
        'sel-line-start': 13645,
        'selection_end': 13672,
        'selection_start': 13661},
                       loc('util/pyUtil/olx.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('util/pyUtil/prg_root.txt'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 44,
        'selection_start': 44},
                       loc('util/pyUtil/spy.py'): {'attrib-starts': [('Spy',
        14),
        ('Spy.run',
         22)],
        'first-line': 34,
        'sel-line': 52,
        'sel-line-start': 1727,
        'selection_end': 1727,
        'selection_start': 1727},
                       loc('util/pyUtil/src/Analysis.py'): {'attrib-starts': [(''\
        'Analysis',
        16),
        ('Analysis.make_empty_graph',
         150)],
        'first-line': 150,
        'sel-line': 156,
        'sel-line-start': 4268,
        'selection_end': 4313,
        'selection_start': 4313},
                       loc('util/pyUtil/src/ArgumentParser.py'): {'attrib-st'\
        'arts': [('ArgumentParser',
                  5),
                 ('ArgumentParser.__init__',
                  7)],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 125,
        'selection_end': 125,
        'selection_start': 125},
                       loc('util/pyUtil/src/AutoStructure.py'): {'attrib-sta'\
        'rts': [('auto',
                 30),
                ('auto.run',
                 57)],
        'first-line': 0,
        'sel-line': 70,
        'sel-line-start': 2160,
        'selection_end': 2160,
        'selection_start': 2160},
                       loc('util/pyUtil/src/CifInfo.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 67,
        'selection_end': 82,
        'selection_start': 73},
                       loc('util/pyUtil/src/CsvImporter.py'): {'attrib-start'\
        's': [('CsvImporter',
               3),
              ('CsvImporter.__init__',
               5)],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 208,
        'selection_end': 243,
        'selection_start': 233},
                       loc('util/pyUtil/src/DimasInfo.py'): {'attrib-starts': [(''\
        'dimas_info',
        288),
        ('dimas_info.load_dimas',
         379)],
        'first-line': 410,
        'sel-line': 426,
        'sel-line-start': 11348,
        'selection_end': 11380,
        'selection_start': 11352},
                       loc('util/pyUtil/src/FileImporter.py'): {'attrib-star'\
        'ts': [('FileUploader',
                42),
               ('FileUploader.import_from_csv',
                113)],
        'first-line': 107,
        'sel-line': 126,
        'sel-line-start': 3775,
        'selection_end': 3825,
        'selection_start': 3785},
                       loc('util/pyUtil/src/FileSystem.py'): {'attrib-starts': [(''\
        'Node',
        409),
        ('Node._dispatch_exception',
         624)],
        'first-line': 615,
        'sel-line': 633,
        'sel-line-start': 17812,
        'selection_end': 17812,
        'selection_start': 17812},
                       loc('util/pyUtil/src/FileTools.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 145,
        'selection_end': 155,
        'selection_start': 145},
                       loc('util/pyUtil/src/FileUploader.py'): {'attrib-star'\
        'ts': [('FileUploader',
                6),
               ('FileUploader.__init__',
                8)],
        'first-line': 1,
        'sel-line': 12,
        'sel-line-start': 267,
        'selection_end': 267,
        'selection_start': 267},
                       loc('util/pyUtil/src/GuiMaker.py'): {'attrib-starts': [(''\
        'make_tool_body',
        21)],
        'first-line': 0,
        'sel-line': 45,
        'sel-line-start': 977,
        'selection_end': 978,
        'selection_start': 977},
                       loc('util/pyUtil/src/History.py'): {'attrib-starts': [(''\
        'History',
        13),
        ('History.__init__',
         14)],
        'first-line': 0,
        'sel-line': 14,
        'sel-line-start': 270,
        'selection_end': 307,
        'selection_start': 307},
                       loc('util/pyUtil/src/Macro.py'): {'attrib-starts': [(''\
        'Macro',
        7),
        ('Macro.reap',
         11)],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 166,
        'selection_end': 183,
        'selection_start': 183},
                       loc('util/pyUtil/src/MakeMovie.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 67,
        'selection_end': 67,
        'selection_start': 67},
                       loc('util/pyUtil/src/OVModel.py'): {'attrib-starts': [(''\
        'OVModel',
        9),
        ('OVModel.on_sub_cycle_finished',
         21)],
        'first-line': 14,
        'sel-line': 25,
        'sel-line-start': 763,
        'selection_end': 807,
        'selection_start': 766},
                       loc('util/pyUtil/src/PilTools.py'): {'attrib-starts': [(''\
        'sNumTitle',
        63),
        ('sNumTitle.__init__',
         64)],
        'first-line': 17,
        'sel-line': 69,
        'sel-line-start': 2029,
        'selection_end': 2065,
        'selection_start': 2055},
                       loc('util/pyUtil/src/RunPrg.py'): {'attrib-starts': [(''\
        'RunPrg',
        8),
        ('RunPrg.run',
         14)],
        'first-line': 0,
        'sel-line': 38,
        'sel-line-start': 697,
        'selection_end': 700,
        'selection_start': 700},
                       loc('util/pyUtil/src/SQLFactories.py'): {'attrib-star'\
        'ts': [('SQLFactory',
                11)],
        'first-line': 6,
        'sel-line': 11,
        'sel-line-start': 268,
        'selection_end': 284,
        'selection_start': 274},
                       loc('util/pyUtil/src/Streams.py'): {'attrib-starts': [(''\
        'Unbuffered',
        3),
        ('Unbuffered.write',
         9)],
        'first-line': 0,
        'sel-line': 11,
        'sel-line-start': 195,
        'selection_end': 195,
        'selection_start': 195},
                       loc('util/pyUtil/src/auto_structure.py'): {'attrib-st'\
        'arts': [('do_bars',
                  95)],
        'first-line': 118,
        'sel-line': 164,
        'sel-line-start': 3888,
        'selection_end': 3903,
        'selection_start': 3896},
                       loc('util/pyUtil/src/make_movie.py'): {'attrib-starts': [(''\
        'movie',
        2),
        ('movie.motion',
         37)],
        'first-line': 62,
        'sel-line': 72,
        'sel-line-start': 1814,
        'selection_end': 1831,
        'selection_start': 1831},
                       loc('util/pyUtil/src/pyTools.py'): {'attrib-starts': [(''\
        'pyTools',
        1),
        ('pyTools.get_tool',
         29)],
        'first-line': 47,
        'sel-line': 58,
        'sel-line-start': 1829,
        'selection_end': 1847,
        'selection_start': 1838},
                       loc('util/pyUtil/unleash_olex2.py'): {'attrib-starts': [(''\
        'zip_destination',
        35)],
        'first-line': 67,
        'sel-line': 78,
        'sel-line-start': 2498,
        'selection_end': 2528,
        'selection_start': 2528},
                       loc('util/pyUtil/userDictionaries.py'): {'attrib-star'\
        'ts': [],
        'first-line': 6,
        'sel-line': 10,
        'sel-line-start': 160,
        'selection_end': 175,
        'selection_start': 175},
                       loc('util/pyUtil/variableFunctions.py'): {'attrib-sta'\
        'rts': [('InitialiseVariables',
                 35)],
        'first-line': 238,
        'sel-line': 242,
        'sel-line-start': 13745,
        'selection_end': 13806,
        'selection_start': 13806},
                       loc('util/pyUtil/variables.py'): {'attrib-starts': [(''\
        'Variable',
        2),
        ('Variable.setValue',
         12)],
        'first-line': 0,
        'sel-line': 15,
        'sel-line-start': 350,
        'selection_end': 350,
        'selection_start': 350},
                       loc('util/pyUtil/wingdbstub.py'): {'attrib-starts': [(''\
        '_ImportWingdb',
        138)],
        'first-line': 200,
        'sel-line': 232,
        'sel-line-start': 9194,
        'selection_end': 9205,
        'selection_start': 9200},
                       loc('util/run.log'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('wingdbstub.py'): {'attrib-starts': [],
        'first-line': 73,
        'sel-line': 99,
        'sel-line-start': 3957,
        'selection_end': 3975,
        'selection_start': 3975},
                       loc('file:g:/Calendar/Calendar.py'): {'attrib-starts': [(''\
        'Calendar',
        9),
        ('Calendar.draw_title',
         221)],
        'first-line': 229,
        'sel-line': 243,
        'sel-line-start': 7560,
        'selection_end': 7604,
        'selection_start': 7563},
                       loc('unknown:<untitled> #2'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #3'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n',
                           'q\n',
                           'result\n',
                           'result.ID\n',
                           'result[0]\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #4'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 472,
        'selection_end': 472,
        'selection_start': 472},
                       loc('unknown:<untitled> #5'): {'attrib-starts': [],
        'first-line': 4,
        'sel-line': 14,
        'sel-line-start': 302,
        'selection_end': 306,
        'selection_start': 306},
                       loc('unknown:<untitled> #6'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #7'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 145,
        'selection_end': 149,
        'selection_start': 149},
                       loc('unknown:<untitled> #8'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #9'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 47,
        'selection_start': 47},
                       loc('unknown:<untitled> #10'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ["not getattr(self, \"%s_d\" %'people_fullnames')\n",
                           'Q = "SHOW TABLES"\n',
                           'res = self.sql(Qstrin=Q)\n',
                           'item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #11'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n',
                           'q\n',
                           'result\n',
                           'result.ID\n',
                           'result[0]\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #12'): {'attrib-starts': [],
        'first-line': 2,
        'sel-line': 12,
        'sel-line-start': 254,
        'selection_end': 258,
        'selection_start': 258},
                       loc('unknown:<untitled> #13'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #14'): {'attrib-starts': [],
        'first-line': 78,
        'sel-line': 92,
        'sel-line-start': 1790,
        'selection_end': 1794,
        'selection_start': 1794},
                       loc('unknown:<untitled> #15'): {'attrib-starts': [],
        'first-line': 168,
        'history': {None: ['txt_norm\n',
                           'txt_sub\n',
                           'txt_l\n',
                           'text_normal\n',
                           'left_start\n',
                           'cur_pos\n',
                           'sub_kern\n',
                           'advance\n',
                           'datadir\n',
                           'a = olex.f("DataDir()")\n',
                           'a\n',
                           'Str\n',
                           'obj\n',
                           'v\n',
                           'dict(v)\n',
                           'v.font\n',
                           'foo_metric = v.getmetrics()\n',
                           'foo_metric\n',
                           'height*fraction\n',
                           'fraction\n',
                           'int(height*fraction)\n',
                           'inc\n',
                           'height/inc\n',
                           'height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'self.table\n',
                           'result.names\n',
                           'result.names()\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           'self.service\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result\n',
                           'result[0]\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'sql\n',
                           'IDs\n',
                           'Q\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.ID\n',
                           'self.sNum\n',
                           'self.sqlKey\n',
                           'tem\n',
                           'l\n',
                           'item, value\n',
                           'field\n',
                           'tables\n',
                           'value\n',
                           'item\n',
                           'return d\n',
                           'd\n',
                           'table\n',
                           'sqlKey\n',
                           'ID\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 176,
        'sel-line-start': 4412,
        'selection_end': 4416,
        'selection_start': 4416},
                       loc('unknown:<untitled> #16'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #17'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #18'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #19'): {'attrib-starts': [],
        'first-line': 1372,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 38,
        'sel-line-start': 3672,
        'selection_end': 3693,
        'selection_start': 3693},
                       loc('unknown:<untitled> #20'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['datadir\n',
                           'a = olex.f("DataDir()")\n',
                           'a\n',
                           'Str\n',
                           'obj\n',
                           'dict(v)\n',
                           'v.font\n',
                           'foo_metric = v.getmetrics()\n',
                           'foo_metric\n',
                           'height*fraction\n',
                           'fraction\n',
                           'int(height*fraction)\n',
                           'inc\n',
                           'height/inc\n',
                           'height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.names\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           'self.service\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result\n',
                           'result[0]\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'IDs\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.ID\n',
                           'self.sNum\n',
                           'self.sqlKey\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'ID\n',
                           'alias\n',
                           'service\n',
                           'result.names()\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'table\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #21'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #22'): {'attrib-starts': [],
        'first-line': 25,
        'history': {},
        'sel-line': 34,
        'sel-line-start': 1725,
        'selection_end': 1725,
        'selection_start': 1725},
                       loc('unknown:<untitled> #23'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 60,
        'selection_start': 0},
                       loc('unknown:<untitled> #24'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #25'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #26'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n',
                           'q\n',
                           'result\n',
                           'result.ID\n',
                           'result[0]\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #27'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 19,
        'sel-line-start': 590,
        'selection_end': 689,
        'selection_start': 688},
                       loc('unknown:<untitled> #28'): {'attrib-starts': [],
        'first-line': 67,
        'history': {None: ['height/inc\n',
                           'height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0]\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result.ID\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'Q\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 81,
        'sel-line-start': 1844,
        'selection_end': 1848,
        'selection_start': 1848},
                       loc('unknown:<untitled> #29'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n',
                           'ws\n',
                           'self.SQL\n',
                           'conn\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:C:/Program Files/Plone 3/Python/Scripts/optilux/bootstrap.py': [''\
        'ws\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #30'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #31'): {'attrib-starts': [],
        'first-line': 23,
        'history': {},
        'sel-line': 34,
        'sel-line-start': 1627,
        'selection_end': 1627,
        'selection_start': 1627},
                       loc('unknown:<untitled> #32'): {'attrib-starts': [],
        'first-line': 342,
        'history': {None: ["not getattr(self, \"%s_d\" %'people_fullnames')\n",
                           'Q = "SHOW TABLES"\n',
                           'res = self.sql(Qstrin=Q)\n',
                           'item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 350,
        'sel-line-start': 11099,
        'selection_end': 11103,
        'selection_start': 11103},
                       loc('unknown:<untitled> #33'): {'attrib-starts': [],
        'first-line': 5576,
        'sel-line': 5592,
        'sel-line-start': 89564,
        'selection_end': 89564,
        'selection_start': 89564},
                       loc('unknown:<untitled> #34'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 34,
        'sel-line-start': 1613,
        'selection_end': 1613,
        'selection_start': 1613},
                       loc('unknown:<untitled> #35'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #36'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['a = olex.f("DataDir()")\n',
                           'a\n',
                           'Str\n',
                           'obj\n',
                           'dict(v)\n',
                           'v.font\n',
                           'foo_metric = v.getmetrics()\n',
                           'foo_metric\n',
                           'height*fraction\n',
                           'fraction\n',
                           'int(height*fraction)\n',
                           'inc\n',
                           'height/inc\n',
                           'height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.names\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           'self.service\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result\n',
                           'result[0]\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'IDs\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'result.names()\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'table\n',
                           'self.sqlKey\n',
                           'self.ID\n',
                           'Q\n',
                           'ID\n',
                           'record\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #37'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #38'): {'attrib-starts': [],
        'first-line': 6,
        'history': {None: ['height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n',
                           'q\n',
                           'result\n',
                           'result.ID\n',
                           'result[0]\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 19,
        'sel-line-start': 715,
        'selection_end': 789,
        'selection_start': 717},
                       loc('unknown:<untitled> #39'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 9,
        'sel-line-start': 707,
        'selection_end': 707,
        'selection_start': 707},
                       loc('unknown:<untitled> #40'): {'attrib-starts': [],
        'first-line': 2,
        'sel-line': 16,
        'sel-line-start': 248,
        'selection_end': 252,
        'selection_start': 252},
                       loc('unknown:<untitled> #41'): {'attrib-starts': [],
        'first-line': 7,
        'sel-line': 17,
        'sel-line-start': 624,
        'selection_end': 694,
        'selection_start': 694},
                       loc('unknown:<untitled> #42'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #43'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n',
                           'ws\n',
                           'self.SQL\n',
                           'conn\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:C:/Program Files/Plone 3/Python/Scripts/optilux/bootstrap.py': [''\
        'ws\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 4,
        'sel-line-start': 123,
        'selection_end': 127,
        'selection_start': 127},
                       loc('unknown:<untitled> #44'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #45'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #46'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #47'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #48'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #49'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n',
                           'q\n',
                           'result\n',
                           'result.ID\n',
                           'result[0]\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #50'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 6,
        'sel-line-start': 318,
        'selection_end': 318,
        'selection_start': 318},
                       loc('unknown:<untitled> #51'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 420,
        'selection_end': 424,
        'selection_start': 424},
                       loc('unknown:<untitled> #52'): {'attrib-starts': [],
        'first-line': 38,
        'sel-line': 48,
        'sel-line-start': 952,
        'selection_end': 956,
        'selection_start': 956},
                       loc('unknown:<untitled> #53'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 221,
        'selection_end': 225,
        'selection_start': 225},
                       loc('unknown:<untitled> #54'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #55'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #56'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n',
                           'ws\n',
                           'self.SQL\n',
                           'conn\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:C:/Program Files/Plone 3/Python/Scripts/optilux/bootstrap.py': [''\
        'ws\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #57'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #58'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #59'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #60'): {'attrib-starts': [],
        'first-line': 32,
        'sel-line': 50,
        'sel-line-start': 1142,
        'selection_end': 1146,
        'selection_start': 1146},
                       loc('unknown:<untitled> #61'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #62'): {'attrib-starts': [],
        'first-line': 24,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 40,
        'sel-line-start': 3751,
        'selection_end': 3751,
        'selection_start': 3751},
                       loc('unknown:<untitled> #63'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 354,
        'selection_end': 354,
        'selection_start': 354},
                       loc('unknown:<untitled> #64'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21},
                       loc('unknown:<untitled> #65'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #66'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #67'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #68'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #69'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #70'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #71'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #72'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #73'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 86,
        'selection_end': 90,
        'selection_start': 90},
                       loc('unknown:<untitled> #74'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['a = olex.f("DataDir()")\n',
                           'a\n',
                           'Str\n',
                           'obj\n',
                           'dict(v)\n',
                           'v.font\n',
                           'foo_metric = v.getmetrics()\n',
                           'foo_metric\n',
                           'height*fraction\n',
                           'fraction\n',
                           'int(height*fraction)\n',
                           'inc\n',
                           'height/inc\n',
                           'height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.names\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           'self.service\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result\n',
                           'result[0]\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'IDs\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'result.names()\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'table\n',
                           'self.sqlKey\n',
                           'self.ID\n',
                           'Q\n',
                           'ID\n',
                           'record\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #75'): {'attrib-starts': [],
        'first-line': 30,
        'folded-linenos': [],
        'history': {None: []},
        'sel-line': 37,
        'sel-line-start': 781,
        'selection_end': 781,
        'selection_start': 781},
                       loc('unknown:<untitled> #76'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 34,
        'sel-line-start': 1613,
        'selection_end': 1613,
        'selection_start': 1613},
                       loc('unknown:<untitled> #77'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1600,
        'sel-line-start': 51236,
        'selection_end': 51236,
        'selection_start': 51236},
                       loc('unknown:<untitled> #78'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 34,
        'sel-line-start': 1693,
        'selection_end': 1693,
        'selection_start': 1693},
                       loc('unknown:<untitled> #79'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #80'): {'attrib-starts': [],
        'first-line': 21,
        'sel-line': 43,
        'sel-line-start': 1636,
        'selection_end': 1678,
        'selection_start': 1678},
                       loc('unknown:<untitled> #81'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #82'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['Q = "SHOW TABLES"\n',
                           'res = self.sql(Qstrin=Q)\n',
                           'item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n',
                           'ws\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:C:/Program Files/Plone 3/Python/Scripts/optilux/bootstrap.py': [''\
        'ws\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #83'): {'attrib-starts': [],
        'first-line': 54,
        'history': {None: ['hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'record\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'self.serviceIDs\n',
                           'self.ID\n',
                           'q\n',
                           'result.ID\n',
                           'result[0]\n',
                           'itemd\n',
                           'item\n',
                           'service\n',
                           'self.service\n',
                           'table\n',
                           'setrvice\n',
                           'ID\n',
                           'PID\n',
                           'newtype\n',
                           'self.table\n',
                           'sNum\n',
                           'nick\n',
                           'Q\n',
                           'self.sqlKey\n',
                           'lookup\n',
                           'selected\n',
                           'if result\n',
                           'id\n',
                           'smiles\n',
                           'result\n',
                           'mrv\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 65,
        'sel-line-start': 2906,
        'selection_end': 2910,
        'selection_start': 2910},
                       loc('unknown:<untitled> #84'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #85'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #86'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #87'): {'attrib-starts': [],
        'first-line': 1,
        'sel-line': 16,
        'sel-line-start': 423,
        'selection_end': 427,
        'selection_start': 427},
                       loc('unknown:<untitled> #88'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['a.__name__\n',
                           'a\n',
                           'a.runF.__name__\n',
                           'a.runF.__name__ = "Fred"\n',
                           'self.gui_language_encoding\n',
                           'self.A = "Fred"\n',
                           'self.A\n',
                           'self.Al\n',
                           'self.A1\n',
                           'alias\n',
                           'label\n',
                           'dlAdd\n',
                           'topic\n',
                           'sol\n',
                           'dlToAdd\n',
                           'rStr\n',
                           'editlink = ascii(editlink)\n',
                           'editlink ="Fred"\n',
                           'editlink\n',
                           'self.editlink\n',
                           'self.editlink = "fred"\n',
                           'self.mode\n',
                           'self.request\n',
                           'item.display\n',
                           'result[0].display\n',
                           'for item in result:\n',
                           'result.names\n',
                           'for item in result.names:\n',
                           'print item\n',
                           'time.time()\n',
                           'now\n',
                           't\n',
                           'subtable\n',
                           'subfield\n',
                           '"New" in IDs\n',
                           'newsNum\n',
                           "self.REQUEST.get('type')\n",
                           "self.REQUEST.get('sNum')\n",
                           "self.REQUEST.get('PID')\n",
                           "self.REQUEST.get('ID')\n",
                           'l\n',
                           'idS\n',
                           "self.REQUEST.get('newtype')\n",
                           'name\n',
                           'ID = self.new_submission(self, PID=PID, newtype='\
                           'type)\n',
                           'type\n',
                           'self.state\n',
                           'operatorID\n',
                           'item.ACCOUNTID\n',
                           'mode\n',
                           'sql_result\n',
                           'selected\n',
                           'result.data_dictionary\n',
                           'item.DISPLAY\n',
                           'result[0].ACCOUNTID\n',
                           'self.os\n',
                           'log\n',
                           'template_tex\n',
                           'marvinproc\n',
                           'li\n',
                           'body\n',
                           'out\n',
                           'self.PID\n',
                           'self.sqlKey\n',
                           'lookup\n',
                           'self.ID\n',
                           'Q="SELECT AccountID, SubmitterID, FROM %s WHERE '\
                           '%s = %s" %(self.table, self.sqlKey, self.ID)\n',
                           "Q=\"SELECT AccountID, SubmitterID, FROM %s WHERE"\
                           " %s like '%s'\" %(self.table, self.sqlKey, self."\
                           "ID)\n",
                           'Q="SELECT AccountID, SubmitterID, FROM %s WHERE '\
                           '%s = %i" %(self.table, self.sqlKey, self.ID)\n',
                           "Q=\"SELECT AccountID, SubmitterID FROM %s WHERE "\
                           "%s = '%s'\" %(self.table, self.sqlKey, self.ID)\n",
                           'newtype\n',
                           'sNum\n',
                           'result\n',
                           'result[0]\n',
                           'result[0].ID[0]\n',
                           'result[0].ID\n',
                           'result[0][0]\n',
                           'newID\n',
                           'sql\n',
                           'self.hkl_src_name\n',
                           'command\n',
                           'ID_service\n',
                           'Q\n',
                           'field\n',
                           'item\n',
                           'fields\n',
                           'values\n',
                           'OIUD\n',
                           'PID\n',
                           'self.table\n',
                           'tables\n',
                           'IDs\n',
                           'table\n',
                           'result.names()\n',
                           'ID\n',
                           'IDs[i]\n',
                           'IDs[tablecount]\n',
                           'value = IDs[tablecount]\n',
                           'value\n',
                           'items\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #89'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n',
                           'ws\n',
                           'self.SQL\n',
                           'conn\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:C:/Program Files/Plone 3/Python/Scripts/optilux/bootstrap.py': [''\
        'ws\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #90'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #91'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['Q = "SHOW TABLES"\n',
                           'res = self.sql(Qstrin=Q)\n',
                           'item[0]\n',
                           'setattr(self, "%s_d" %item[0], {})\n',
                           'name\n',
                           'text\n',
                           'fred = txt.translate()\n',
                           "fred = txt.translate('a')\n",
                           'txt.table\n',
                           'self.sqlKey\n',
                           'xray_crystal_colourappearance\n',
                           "fred = 'xray_crystal_colourappearance'\n",
                           'fred == teble\n',
                           'fred == table\n',
                           'db\n',
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, self.s"\
                           "ervice, ID)\n",
                           "Q = \"SELECT ID, ID_%s from submission_%s where "\
                           "ID = '%s'\" %(self.service, self.service, ID)\n",
                           'record\n',
                           "self.serviceIDs['ID']\n",
                           'a =self.serviceIDs[4000].get(self.service)\n',
                           'self.serviceIDs[4000].get(self.service)\n',
                           "self.serviceIDs[4000].get(self.service, 'Fred')\n",
                           "self.serviceIDs[4000].get('%s\" %self.service, '"\
                           "Fred')\n",
                           "a = self.serviceIDs[4000].get('%s\" %self.servic"\
                           "e, 'Fred')\n",
                           'a\n',
                           "self.serviceIDs[4000]['ID_xray']\n",
                           'self.serviceIDs[4000][self.service]\n',
                           'self.serviceIDs[4000]\n',
                           'self.ID = self.serviceIDs[ID].get("ID_%s" %self.'\
                           'service, "0")\n',
                           'ID = int(ID)\n',
                           'self.ID = 4000\n',
                           "Q=\"SELECT %s FROM %s WHERE %s = '%s' %s\" %(fie"\
                           "lds, table, self.sqlKey, self.ID, filter_dates)\n",
                           'q\n',
                           'topic\n',
                           'l\n',
                           'item\n',
                           'item.field\n',
                           'item.COLOURAPPEARANCEID\n',
                           'self.table\n',
                           'lookup\n',
                           'value\n',
                           'self.topic\n',
                           'field\n',
                           "self.sqlKey = 'ID_xray'\n",
                           'return_list\n',
                           'rs = self.sql(Qstring=Q)\n',
                           'sqlFiltered\n',
                           'table\n',
                           'filter\n',
                           'filter_table = filter_lookup_table.split("_")[-2'\
                           ':-1]\n',
                           'filter_table = filter_table.join()\n',
                           'f[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[0]\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':]\n',
                           ' filter_field = (filter_lookup_table.split("_")['\
                           '-1:])[0]\n',
                           'filter_field = filter_lookup_table.split("_")[-1'\
                           ':][0]\n',
                           'filter_field\n',
                           'filter_table = filter_lookup_table.split(filter_'\
                           'field)[:1][0]\n',
                           'filter_table = filter_table[:-1]\n',
                           'filter_table\n',
                           'sqlQ\n',
                           " Q = \"SELECT ID from submission_%s where ID = '"\
                           "%s'\" %(self.service, self.service, IDS)\n",
                           "Q = \"SELECT ID from submission_%s where ID = '%"\
                           "s'\" %(self.service,  IDS)\n",
                           'self.getIDfromIDS(IDS)\n',
                           'IDS\n',
                           'result = self.getIDfromIDS(ID)\n',
                           "Q = \"SELECT ID from submission_%s where ID_%s ="\
                           " '%s'\" %(self.service,  self.service, IDS)\n",
                           'result = self.SQL.run_select_sql_d(Q)\n',
                           'result = self.SQL.run_select_sql_d(Q, key="ID_%s'\
                           '" %self.service)\n',
                           'd\n',
                           'result[ID]\n',
                           'self.serviceIDs\n',
                           'self.serviceIDs(ID)\n',
                           'self.serviceIDs[ID]\n',
                           'result = self.serviceIDs[ID]\n',
                           "self.ID = result['ID_%s' %self.service]\n",
                           "self.ID = result['ID' %self.service]\n",
                           "self.ID = result['ID']\n",
                           'self.ID = result[ID]\n',
                           'result\n',
                           "ID = result[IDS]['ID_%s' %self.service]\n",
                           "ID = result[IDS]['ID' %self.service]\n",
                           "ID = result[IDS]['ID']\n",
                           'ID = self.ID\n',
                           'self.ID\n',
                           'ID\n',
                           'self.service\n',
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, self.sqlKey, year)\n",
                           "Q = \"SELECT ID_%s FROM submission_%s WHERE ID_%"\
                           "s like '%s%%' ORDER BY DateSubmission ASC\" %(se"\
                           "rvice, service, service, year)\n",
                           'Q\n',
                           'id\n',
                           'smiles\n',
                           'mrv\n',
                           't\n',
                           'bit.capitalize()\n',
                           'bit.title()\n',
                           'bit\n',
                           'txt\n',
                           'ws\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [""\
        "a = entry['English']\n",
        'a\n',
        'l\n',
        'len(line)\n',
        'english\n',
        'chinese\n',
        'linr\n',
        'answer_l\n',
        'rFile\n',
        'language\n',
        "entry.get('%s'%language, '.')).strip()\n",
        'conn\n',
        'p.translated_text\n',
        'html_src\n',
        'h2\n',
        'h2.request\n',
        'h2.request("www.olex2.org")\n',
        'h2.request("GET", "www.olex2.org")\n',
        'page\n',
        'r1\n',
        'r1.reason\n',
        'r1.status\n',
        'r1.read()\n',
        'url\n',
        'm\n',
        'params\n',
        'translation\n',
        'field\n',
        'en\n',
        'e\n',
        'sql\n',
        'short_lang\n',
        'txt\n',
        'data\n',
        'd\n',
        'self.dictionary_l[0]\n',
        'value\n',
        'values\n',
        'fields\n',
        'ID\n',
        'Q\n',
        'lang\n',
        'entry\n',
        'line\n'],
                    u'file:C:/Program Files/Plone 3/Python/Scripts/optilux/bootstrap.py': [''\
        'ws\n'],
                    u'file:c:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'value\n',
        'Q\n',
        'db\n',
        'self.SQL.run_select_sql\n',
        'res\n',
        'english\n',
        'line\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #92'): {'attrib-starts': [],
        'first-line': 6,
        'sel-line': 18,
        'sel-line-start': 1087,
        'selection_end': 1087,
        'selection_start': 1087},
                       loc('unknown:<untitled> #93'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 12,
        'sel-line-start': 997,
        'selection_end': 1245,
        'selection_start': 997},
                       loc('unknown:<untitled> #94'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 5010,
        'selection_end': 5546,
        'selection_start': 5546},
                       loc('unknown:<untitled> #95'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #96'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #97'): {'attrib-starts': [],
        'first-line': 56,
        'sel-line': 73,
        'sel-line-start': 10174,
        'selection_end': 10178,
        'selection_start': 10178},
                       loc('unknown:<untitled> #98'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #99'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 212,
        'selection_end': 216,
        'selection_start': 216},
                       loc('unknown:<untitled> #100'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #101'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #102'): {'attrib-starts': [],
        'first-line': 22,
        'sel-line': 36,
        'sel-line-start': 1404,
        'selection_end': 1408,
        'selection_start': 1408},
                       loc('unknown:<untitled> #103'): {'attrib-starts': [],
        'first-line': 25,
        'sel-line': 34,
        'sel-line-start': 974,
        'selection_end': 978,
        'selection_start': 978},
                       loc('unknown:<untitled> #104'): {'attrib-starts': [],
        'first-line': 22,
        'sel-line': 36,
        'sel-line-start': 876,
        'selection_end': 880,
        'selection_start': 880},
                       loc('unknown:<untitled> #105'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'record\n',
                           'self.service\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.sqlKey\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'ID\n',
                           'self.serviceIDs\n',
                           'table\n',
                           'self.ID\n',
                           'nick\n',
                           'mrv\n',
                           'smiles\n',
                           'id\n',
                           'q\n',
                           'result\n',
                           'result.ID\n',
                           'result[0]\n',
                           'Q\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #106'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #107'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #108'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #109'): {'attrib-starts': [],
        'first-line': 25,
        'history': {},
        'sel-line': 34,
        'sel-line-start': 1629,
        'selection_end': 1629,
        'selection_start': 1629},
                       loc('unknown:<untitled> #110'): {'attrib-starts': [],
        'first-line': 37,
        'history': {None: ['a = olex.f("DataDir()")\n',
                           'a\n',
                           'Str\n',
                           'obj\n',
                           'dict(v)\n',
                           'v.font\n',
                           'foo_metric = v.getmetrics()\n',
                           'foo_metric\n',
                           'height*fraction\n',
                           'fraction\n',
                           'int(height*fraction)\n',
                           'inc\n',
                           'height/inc\n',
                           'height\n',
                           'command\n',
                           'olx.HtmlPanelWidth()\n',
                           'var\n',
                           'font\n',
                           'hstart\n',
                           'hStart\n',
                           'ret\n',
                           'left\n',
                           'font_size\n',
                           'align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'retVal\n',
                           'newtype\n',
                           'result.names\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           'self.service\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'sNum\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result\n',
                           'result[0]\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'IDs\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'service\n',
                           'result.names()\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'self.table\n',
                           'item\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'PID\n',
                           'table\n',
                           'self.sqlKey\n',
                           'self.ID\n',
                           'Q\n',
                           'ID\n',
                           'record\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 45,
        'sel-line-start': 802,
        'selection_end': 806,
        'selection_start': 806},
                       loc('unknown:<untitled> #111'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #112'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 1,
        'sel-line-start': 56,
        'selection_end': 457,
        'selection_start': 457},
                       loc('unknown:<untitled> #113'): {'attrib-starts': [],
        'first-line': 98,
        'sel-line': 116,
        'sel-line-start': 3017,
        'selection_end': 3017,
        'selection_start': 3017},
                       loc('unknown:<untitled> #114'): {'attrib-starts': [],
        'first-line': 14,
        'history': {None: ['align\n',
                           'top\n',
                           'top_left\n',
                           'image_prefix\n',
                           'valign\n',
                           'self.gui_htmlpanelwidth\n',
                           'colour[0]\n',
                           'GuiFunctions.getVariables()\n',
                           "self.getVariables('gui')\n",
                           'width\n',
                           'f\n',
                           '"\\n" in txt\n',
                           '"\\\\" in txt\n',
                           'logfile.replace("\\\\", "\\")\n',
                           'logfile = logfile.replace("\\\\", "\\")\n',
                           'logfile\n',
                           'txt\n',
                           'R1`\n',
                           'R1\n',
                           'variable\n',
                           'default\n',
                           'result.data_dictionary\n',
                           'result.data_dictionary()\n',
                           'result.dictionaries\n',
                           'result.dictionaries()\n',
                           'result.asRDB\n',
                           'result.asRDB()\n',
                           'result = self.SQL.run_select_sql(Q)\n',
                           ' result\n',
                           "Q = \"SELECT %s FROM %s WHERE %s_%s like '%s%s%%"\
                           "' ORDER BY DateSubmission ASC\" %(self.sqlKey, s"\
                           "elf.table, self.sqlKey, nick, year, nick)\n",
                           'result = self.sql(Qstring=Q)\n',
                           'sNums\n',
                           'newID\n',
                           'items\n',
                           'result = result = self.sql(Qstring=Q)\n',
                           'result[0][0]\n',
                           'result[0][1]\n',
                           'self.id = id\n',
                           'self.ID = ID\n',
                           'self.sNum = sNum\n',
                           'self.sNum\n',
                           'tem\n',
                           'item, value\n',
                           'tables\n',
                           'return d\n',
                           'sqlKey\n',
                           'alias\n',
                           'l\n',
                           'd\n',
                           'self.REQUEST.get(item)\n',
                           'field\n',
                           'dlAdd\n',
                           'value\n',
                           'sql\n',
                           'value_for_key\n',
                           'value_for_key = self.escape_characters(value_for'\
                           '_key)\n',
                           'k\n',
                           'v\n',
                           'record\n',
                           'result.names\n',
                           'result.names()\n',
                           'result[0].ID\n',
                           "result.get('ID')\n",
                           'name\n',
                           'result[0].id_xray\n',
                           'result[0].ID_xray\n',
                           'self.serviceIDs[ID]\n',
                           'IDs\n',
                           'self.serviceIDs\n',
                           'self.ID\n',
                           'q\n',
                           'result.ID\n',
                           'result[0]\n',
                           'itemd\n',
                           'item\n',
                           'service\n',
                           'self.service\n',
                           'table\n',
                           'setrvice\n',
                           'ID\n',
                           'PID\n',
                           'newtype\n',
                           'self.table\n',
                           'sNum\n',
                           'nick\n',
                           'Q\n',
                           'self.sqlKey\n',
                           'lookup\n',
                           'selected\n',
                           'if result\n',
                           'id\n',
                           'smiles\n',
                           'result\n',
                           'mrv\n',
                           'retVal\n',
                           'type(retVal)(\n',
                           'type(retVal)\n',
                           "type(retVal) = 'str'\n",
                           "type(retVal) == 'str'\n",
                           'type(retVal) == str\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py': [''\
        'sys.path\n',
        'line\n',
        'self.host\n',
        'host\n',
        'db\n',
        'passwd\n',
        'user\n',
        'item[0]\n',
        'item.keys\n',
        'item.keys()[0]\n',
        'res[k]\n',
        "fields = res[0]['Field']\n",
        'fields\n',
        'targetFields\n',
        'row[field]\n',
        'a = row[field]\n',
        'a\n',
        "row['ID']\n",
        'data_d[ID][field]\n',
        'itm\n',
        'sourceFields\n',
        'item[k]\n',
        'item[k].lower()\n',
        'type = item.keys()[1][0]\n',
        'type = item.keys()[1]\n',
        'type\n',
        'item[type]\n',
        'self.targetFields\n',
        'self.sourceFields\n',
        'self.syncFields\n',
        'fieldStr\n',
        'field\n',
        'record\n',
        'self.sourceData[ID]\n',
        'self.sourceData\n',
        'self.fieldMapping[item]\n',
        'self.fieldMapping\n',
        'mapping\n',
        "res['ID']\n",
        'res[0]\n',
        'sourceData\n',
        'ID\n',
        'value\n',
        'row\n',
        'self.table\n',
        'self.syncTable\n',
        'in self.tablesInSourceDB\n',
        'self.tablesInSourceDB\n',
        'self.tablesInTargetDB\n',
        'tablesInSourceDB\n',
        'tablesInTargetDB\n',
        'k\n',
        'iem.keys()\n',
        'item.keys()\n',
        'ite.get("Table_type")\n',
        'item.get("Table_type")\n',
        'item\n',
        'syncTable\n',
        'ex\n',
        'Q\n',
        'rew\n',
        'res\n',
        'table\n'],
                    u'file:C:/Documents and Settings/Horst/Desktop/olex/util/pyUtil/unleash_olex2.py': [''\
        'pysvn.Revision()\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 0 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.number, 123 )\n',
        'pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a = pysvn.Revision( pysvn.opt_revision_kind.head)\n',
        'a.number\n',
        'a\n',
        'pysvn.opt_revision_kind.working\n',
        'type(OptionParser)\n']},
        'sel-line': 25,
        'sel-line-start': 3425,
        'selection_end': 3429,
        'selection_start': 3429},
                       loc('unknown:<untitled> #115'): {'attrib-starts': [],
        'first-line': 14,
        'sel-line': 34,
        'sel-line-start': 1613,
        'selection_end': 1613,
        'selection_start': 1613},
                       loc('unknown:<untitled> #116'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #117'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #118'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #119'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 588,
        'selection_end': 588,
        'selection_start': 588},
                       loc('unknown:<untitled> #120'): {'attrib-starts': [],
        'first-line': 10,
        'history': {u'file:p:/Calendars/Calendar/Calendar.py': ['self.tn_siz'\
        'e\n',
        'self.print_location_in_index\n',
        'iptc_d[(2,0)]\n',
        'iptc_d[(2,1)]\n',
        'iptc_d[(2,2)]\n',
        'iptc_d[(2,101)]\n',
        'iptc_d[(2,91)]\n',
        'iptc_d[(2,92)]\n',
        'iptc_d[(2,90)]\n',
        'iptc_d[(2,93)]\n',
        'iptc_d[(2,94)]\n',
        'iptc_d[(2,95)]\n']},
        'sel-line': 36,
        'sel-line-start': 846,
        'selection_end': 850,
        'selection_start': 850},
                       loc('unknown:<untitled> #121'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 19,
        'sel-line-start': 922,
        'selection_end': 979,
        'selection_start': 979}}
proj.env-vars = {None: ('default',
                        ['']),
                 loc('file:C:/Program Files/Olex2/spy.py'): ('project',
        ['']),
                 loc('file:C:/Program Files/Olex2/util/pyUtil/initpy.py'): (''\
        'project',
        ['']),
                 loc('file:C:/Program Files/Olex2/util/pyUtil/spy.py'): ('pr'\
        'oject',
        ['']),
                 loc('dictionary.txt'): ('project',
        ['']),
                 loc('etc/gui/naming.htm'): ('project',
        ['']),
                 loc('etc/gui/settings.htm'): ('project',
        ['']),
                 loc('util/DIMAS/DIMAS DATA MAINTANANCE/UpdateDimasDB.py'): (''\
        'project',
        ['']),
                 loc('util/DIMAS/OlexGui/dl_box.py'): ('project',
        ['']),
                 loc('util/DIMAS/OlexGui/rs_ext.py'): ('project',
        ['']),
                 loc('util/SiteSpecific/1K.cif'): ('project',
        ['']),
                 loc('util/SiteSpecific/6K.cif'): ('project',
        ['']),
                 loc('util/SiteSpecific/apex.cif'): ('project',
        ['']),
                 loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/command_line/configure.py'): (''\
        'project',
        ['']),
                 loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/libtbx/libtbx/config.py'): (''\
        'project',
        ['']),
                 loc('util/pyUtil/CctbxLib/cctbx/cctbx_sources/smtbx/ab_initio/examples/solve_shelx.py'): (''\
        'project',
        ['']),
                 loc('util/pyUtil/CctbxLib/cctbx_controller.py'): ('project',
        ['']),
                 loc('util/pyUtil/CctbxLib/cctbx_olex_adapter.py'): ('projec'\
        't',
        ['']),
                 loc('util/pyUtil/CctbxLib/map_flipping.py'): ('project',
        ['']),
                 loc('util/pyUtil/PluginLib/plugin-MySQL/OlexToMySQL.py'): (''\
        'project',
        ['']),
                 loc('util/pyUtil/PyToolLib/FontInstances.py'): ('project',
        ['']),
                 loc('util/pyUtil/PyToolLib/OlexHelpToMySQL.py'): ('project',
        ['']),
                 loc('util/pyUtil/PyToolLib/PeriodicTable.py'): ('project',
        ['']),
                 loc('util/pyUtil/PyToolLib/PilTools.py'): ('project',
        ['']),
                 loc('util/pyUtil/PyToolLib/RoundedCorners.py'): ('project',
        ['']),
                 loc('util/pyUtil/PyToolLib/UpdateDimasDB.py'): ('project',
        ['']),
                 loc('util/pyUtil/cctbx/cctbx_refine.py'): ('project',
        ['']),
                 loc('util/pyUtil/initpy.py'): ('project',
        ['']),
                 loc('util/pyUtil/mgpy/example1a.py'): ('project',
        ['']),
                 loc('util/pyUtil/src/FileImporter.py'): ('project',
        ['']),
                 loc('util/pyUtil/src/SQLFactories.py'): ('project',
        ['']),
                 loc('util/pyUtil/src/pyTools.py'): ('project',
        ['']),
                 loc('util/pyUtil/unleash_olex2.py'): ('project',
        [''])}
proj.pyexec = {None: ('custom',
                      'c:\\Python25\\python.exe')}
proj.revision-control = 1
proj.revision-control-system = u'svn'
search.replace-history = [u'info.png',
                          u'SNUM_',
                          u'user_',
                          u'snum_',
                          u'&Aring;',
                          u'font_name = self.gui_image_font_name',
                          u'font_name = "Vera"',
                          u'self.',
                          u'import Image Tools as IT',
                          u'self.GuiVar[',
                          u"self.GuiVar['gui_",
                          u'self.IT.HTMLColorToRGB',
                          u'self.IT.RGBToHTMLColor',
                          u'self.IT.adjust_colour',
                          u'self.IT.add_whitespace',
                          u'self.IT.make_border',
                          u'self.r_min',
                          u'OlexVFS',
                          u'adjust_luminosity']
search.search-history = [u'substance view',
                         u'max_autocycle',
                         u'autochem_max_autocycle',
                         u'Sorry',
                         u'exec',
                         u'smtp_host',
                         u'.write_debug',
                         u'print',
                         u'msg =',
                         u'RunPrg',
                         u'align',
                         u'spy Analysis',
                         u'hist',
                         u'his_file',
                         u'kill',
                         u'deal',
                         u'optilux',
                         u'spy Analy',
                         u'spy ru',
                         u'spy ']
search.search-scope-history = [loc('../make'),
                               loc('etc/gui/This report'),
                               loc('etc/gui/This re'),
                               loc('../OD')]
